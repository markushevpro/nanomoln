{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "css-bundle-plugin-ns:@remix-run/css-bundle", "../app/app/shared/popups/Confirmation/store/store.ts", "../app/app/shared/popups/Confirmation/store/data.ts", "../app/app/shared/popups/Confirmation/view.tsx", "../app/app/shared/popups/Confirmation/confirmaton-popup.module.css", "../app/app/shared/popups/index.tsx", "../app/app/shared/styles/theme.ts", "../app/app/shared/styles/components/checkbox.module.css", "../app/app/shared/ui-kit/GlobalLoader/index.tsx", "../app/app/shared/ui-kit/GlobalLoader/hooks/useLoadState.ts", "../app/routes/api.download/route.ts", "../app/app/entrypoints/Download/index.ts", "../app/app/entrypoints/Download/consts.ts", "../app/app/services/fs/modules/dir.module.ts", "../app/app/services/fs/modules/path.module.ts", "../app/app/services/hash/index.ts", "../app/app/shared/lib/utils/path.ts", "../app/app/services/fs/modules/file.module.ts", "../app/app/services/fs/service.ts", "../app/app/services/json/index.tsx", "../app/app/services/config/index.ts", "../app/app/entrypoints/Download/helpers.ts", "../app/routes/view.$path.$/route.ts", "../app/app/segments/behavior/RemoveButton/index.tsx", "../app/app/segments/behavior/RemoveButton/hooks/useRemoveConfirmation.tsx", "../app/app/services/folder/hooks/useFilesHandlers.ts", "../app/app/services/api/index.ts", "../app/app/shared/lib/utils/object.ts", "../app/app/shared/stores/generator.ts", "../app/app/shared/stores/files/data.ts", "../app/app/shared/stores/files/store.ts", "../app/app/shared/stores/files/index.tsx", "../app/app/services/folder/hooks/useFolder.ts", "../app/app/services/folder/hooks/useCreateFolder.ts", "../app/app/services/fs/client.service.ts", "../app/app/services/folder/hooks/helpers.ts", "../app/app/services/folder/hooks/useEditInFolder.ts", "../app/app/services/folder/hooks/useReload.ts", "../app/app/segments/behavior/SelectionActions/index.tsx", "../app/app/segments/elements/FileRow/cells/FileCellActions.tsx", "../app/app/segments/elements/FileRow/cells/consts.ts", "../app/app/segments/elements/FileRow/cells/file-cell.module.css", "../app/app/segments/elements/FileRow/cells/FileCellContent.tsx", "../app/app/shared/ui-kit/BlockLink/index.tsx", "../app/app/shared/ui-kit/BlockLink/block-link.module.css", "../app/app/shared/ui-kit/EditInput/index.tsx", "../app/app/segments/elements/FileRow/cells/FileCellIcon.tsx", "../app/app/segments/elements/FileRow/cells/FileCellInfo.tsx", "../app/app/segments/elements/FileRow/cells/FileCellSelect.tsx", "../app/app/segments/elements/FileRow/index.tsx", "../app/app/shared/ui-kit/List/index.tsx", "../app/app/shared/ui-kit/List/hooks/useListConfig.ts", "../app/app/shared/ui-kit/List/hooks/useListHandlers.ts", "../app/app/shared/ui-kit/List/view/index.tsx", "../app/app/shared/ui-kit/List/view/ListItem/draggable.tsx", "../app/app/shared/ui-kit/List/hooks/useDnDList.ts", "../app/app/shared/ui-kit/List/utils.ts", "../app/app/shared/ui-kit/List/view/ListItem/list-item.module.css", "../app/app/shared/ui-kit/List/view/ListItem/static.tsx", "../app/app/shared/ui-kit/List/view/ListItem/index.tsx", "../app/app/shared/ui-kit/List/view/list.module.css", "../app/app/shared/ui-kit/List/view/ListHeader/index.tsx", "../app/app/shared/ui-kit/List/view/ListHeader/list-header.module.css", "../app/app/segments/appearance/FilesList/hooks/useFilesList.ts", "../app/app/shared/lib/hooks/useSelection.ts", "../app/app/shared/lib/utils/arrays.ts", "../app/app/segments/appearance/FilesList/hooks/helpers.tsx", "../app/app/segments/behavior/RenameButton/index.tsx", "../app/app/segments/behavior/DirActions/index.tsx", "../app/app/segments/behavior/DownloadButton/index.tsx", "../app/app/segments/behavior/FileActions/index.tsx", "../app/app/shared/ui-kit/Info/index.tsx", "../app/app/shared/ui-kit/InfoList/info-list.module.css", "../app/app/shared/ui-kit/InfoList/index.tsx", "../app/app/segments/elements/FileInfo/helpers.tsx", "../app/app/shared/ui-kit/FileType/file-type.module.css", "../app/app/shared/ui-kit/FileType/index.tsx", "../app/app/segments/elements/FileInfo/index.tsx", "../app/app/segments/elements/FolderInfo/helpers.ts", "../app/app/segments/elements/FolderInfo/index.tsx", "../app/app/segments/appearance/FilesList/index.tsx", "../app/app/screens/FilesList/index.tsx", "../app/app/flows/ViewFiles/index.tsx", "../app/app/segments/appearance/PathList/hooks.ts", "../app/app/segments/appearance/PathList/helpers.tsx", "../app/app/segments/appearance/PathList/index.tsx", "../app/app/screens/PathList/index.tsx", "../app/app/segments/appearance/PageLayout/index.tsx", "../app/app/segments/behavior/Breadcrumbs/index.tsx", "../app/app/segments/behavior/Breadcrumbs/Breadcrumbs.module.css", "../app/app/segments/behavior/Breadcrumbs/hooks.ts", "../app/app/segments/behavior/Breadcrumbs/consts.ts", "../app/app/segments/behavior/Breadcrumbs/helpers.ts", "../app/app/shared/ui-kit/AppHeaderView/index.tsx", "../app/app/shared/ui-kit/AppHeaderView/app-header.module.css", "../app/app/shared/ui-kit/LinkLogo/index.tsx", "../app/app/shared/ui-kit/Logo/index.tsx", "../app/app/segments/appearance/AppHeader/index.tsx", "../app/app/segments/behavior/FolderActions/index.tsx", "../app/app/segments/behavior/Uploader/index.tsx", "../app/app/services/config/context.tsx", "../app/app/segments/behavior/Uploader/components/AcceptContent.tsx", "../app/app/segments/behavior/Uploader/components/RejectContent.tsx", "../app/app/segments/behavior/Uploader/components/UploadIcon.tsx", "../app/app/segments/behavior/Uploader/hooks/useSmartUpload.ts", "../app/app/segments/behavior/Uploader/helpers.ts", "../app/app/segments/behavior/Uploader/hooks/useOverweightConfirmation.tsx", "../app/app/segments/behavior/Uploader/hooks/useOverwriteConfirmation.tsx", "../app/app/segments/behavior/Uploader/hooks/upload-list.module.css", "../app/app/segments/behavior/Uploader/uploader.module.css", "../app/app/flows/Main/index.tsx", "../app/app/shared/lib/default-meta.ts", "../app/app/entrypoints/Folder/hooks.ts", "../app/app/services/config/helpers.ts", "../app/app/entrypoints/Folder/helpers.ts", "../app/app/entrypoints/Folder/loader.ts", "../app/app/entrypoints/Folder/index.tsx", "../app/routes/_index/route.ts", "../app/app/entrypoints/Home/hooks.ts", "../app/app/entrypoints/Home/loader.ts", "../app/app/entrypoints/Home/index.tsx", "../app/routes/api.$/route.ts", "../app/app/services/error/index.ts", "../app/app/services/server/generator.ts", "../app/app/services/server/folder/handlers/create.ts", "../app/app/services/server/folder/handlers/files.ts", "../app/app/services/server/folder/handlers/get.ts", "../app/app/services/server/folder/handlers/move.ts", "../app/app/services/server/folder/handlers/remove.ts", "../app/app/services/server/folder/handlers/rename.ts", "../app/app/services/server/folder/handlers/upload.ts", "../app/app/services/server/folder/index.ts", "../app/app/services/url/utils.ts", "../app/app/entrypoints/Api/action.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport * as isbotModule from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  let prohibitOutOfOrderStreaming =\n    isBotRequest(request.headers.get(\"user-agent\")) || remixContext.isSpaMode;\n\n  return prohibitOutOfOrderStreaming\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\n// We have some Remix apps in the wild already running with isbot@3 so we need\n// to maintain backwards compatibility even though we want new apps to use\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\nfunction isBotRequest(userAgent: string | null) {\n  if (!userAgent) {\n    return false;\n  }\n\n  // isbot >= 3.8.0, >4\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\n    return isbotModule.isbot(userAgent);\n  }\n\n  // isbot < 3.8.0\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\n    return isbotModule.default(userAgent);\n  }\n\n  return false;\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinkDescriptor } from '@remix-run/node';\n\nimport { ColorSchemeScript, MantineProvider } from '@mantine/core';\nimport \"@mantine/core/styles.css?__remix_sideEffect__\";\nimport \"@mantine/dropzone/styles.css?__remix_sideEffect__\";\nimport { cssBundleHref } from '@remix-run/css-bundle';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n'@remix-run/react';\n\nimport \"~/shared/styles/global.css?__remix_sideEffect__\";\n// eslint-disable-next-line import/order\nimport { Popups } from '~/shared/popups';\nimport { nanomolnTheme } from '~/shared/styles/theme';\nimport { GlobalLoader } from '~/shared/ui-kit/GlobalLoader';\n\nexport\nfunction links()\n: LinkDescriptor[]\n{\n  return [\n  ...(cssBundleHref ?\n  [{\n    rel: 'stylesheet',\n    href: cssBundleHref\n  }] :\n  [])];\n\n}\n\nexport default\nfunction App()\n\n{\n  return (\n    // eslint-disable-next-line react/no-unknown-property\n    <html data-mantine-color-scheme=\"dark\" lang=\"en\">\n            <head>\n                <meta charSet=\"utf-8\" />\n                <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\n                <Meta />\n                <Links />\n                <ColorSchemeScript forceColorScheme='dark' />\n            </head>\n\n            <body>\n                <MantineProvider forceColorScheme='dark' theme={nanomolnTheme}>\n                    <GlobalLoader />\n                    <Outlet />\n                    <ScrollRestoration />\n                    <Scripts />\n                    <LiveReload />\n                    <Popups />\n                </MantineProvider>\n            </body>\n        </html>);\n\n}", "export const cssBundleHref = \"/build/css-bundle-663VRVJY.css\";", "import type { IConfirmationPopupData } from './data'\nimport type { ReactNode }              from 'react'\n\nimport { create } from 'zustand'\n\nimport { confirmationPopupInitial } from './data'\n\nexport\ninterface IConfirmationPopupActions\n{\n    show: ( title: string, text: ReactNode, buttons: ReactNode ) => void\n    hide: () => void\n}\n\nexport\ntype IConfirmationPopup = IConfirmationPopupData & IConfirmationPopupActions\n\nexport\nconst useConfirmationPopup = create<IConfirmationPopup>(\n    ( set ) => ({\n        ...confirmationPopupInitial,\n        show: ( title: string, text: ReactNode, buttons: ReactNode ) => {\n            set({\n                visible: true,\n                title,\n                text,\n                buttons\n            })\n        },\n        hide: () => {\n            set({\n                visible: false,\n                title:   '',\n                text:    '',\n                buttons: null\n            })\n        }\n    })\n)\n", "import type { ReactNode } from 'react'\n\nexport\ninterface IConfirmationPopupData\n{\n    visible: boolean\n    title: string\n    text: ReactNode\n    buttons: ReactNode\n}\n\nexport\nconst confirmationPopupInitial: IConfirmationPopupData = {\n    visible: false,\n    title:   '',\n    text:    null,\n    buttons: null\n}\n", "import type { ReactNode } from 'react';\n\nimport { Group, Modal } from '@mantine/core';\n\nimport styles from './confirmaton-popup.module.css';\nimport { useConfirmationPopup } from './store/store';\n\nexport\nfunction ConfirmationPopup()\n: ReactNode\n{\n  const { visible, title, text, buttons, hide } = useConfirmationPopup();\n\n  return (\n    <Modal\n      centered\n      opened={visible}\n      title={title}\n      onClose={hide}>\n\n            <div className={styles.content}>\n                {text}\n            </div>\n\n            <Group mt=\"xl\">\n                {buttons}\n            </Group>\n        </Modal>);\n\n}", "export default {\"content\":\"confirmaton-popup-module__content__U58JN\"};", "import { ConfirmationPopup } from './Confirmation'\n\nexport\nfunction Popups\n()\n{\n    return (\n        <>\n            <ConfirmationPopup />\n        </>\n    )\n}\n", "import { Checkbox, createTheme } from '@mantine/core';\n\nimport checkboxStyles from './components/checkbox.module.css';\n\nexport\nconst nanomolnTheme = createTheme({\n  primaryColor: 'primary',\n  colors: {\n    primary: [\n    '#C3D4DC',\n    '#6e9eb3',\n    '#6398af',\n    '#52859a',\n    '#45768a',\n    '#33667a',\n    '#1e3c48',\n    '#18303a',\n    '#12242B',\n    '#0c181d',\n    '#060c03'],\n\n    dark: [\n    '#edf2f4',\n    '#2b2b2b',\n    '#272625',\n    '#24211e',\n    '#201c18',\n    '#1c1918',\n    '#17110d',\n    '#120D09',\n    '#080604',\n    '#000000']\n\n  },\n  components: {\n    Checkbox: Checkbox.extend({\n      defaultProps: { classNames: checkboxStyles },\n      vars: () => ({ root: { '--checkbox-color': 'var(--mantine-color-primary-6)' } })\n    })\n  }\n});", "export default {\"input\":\"checkbox-module__input__H3pc0\"};", "import { useNavigation }       from '@remix-run/react'\nimport { useEffect, useState } from 'react'\nimport LoadingBar              from 'react-top-loading-bar'\n\nimport { useLoadState } from './hooks/useLoadState'\n\nexport\nfunction GlobalLoader\n()\n{\n    const navigation              = useNavigation()\n    const [ progress, $progress ] = useState( 0 )\n    const loadState               = useLoadState( true )\n\n    useEffect(() => {\n        switch ( navigation.state ) {\n            case 'submitting':\n                $progress( Math.max( progress, 25 ))\n                return\n\n            case 'loading':\n                loadState.lock()\n                $progress( Math.max( progress, 75 ))\n                return\n\n            case 'idle':\n            default:\n                loadState.unlock()\n                $progress(( old: number ) => old === 0 ? 0 : 100 )\n        }\n    }, [ navigation.state, progress, loadState ])\n\n    return (\n        <LoadingBar\n            color={ progress <= 50 ? 'var(--color-red)' : 'var(--color-green)'}\n            progress={progress}\n            onLoaderFinished={() => { $progress( 0 ) }}\n        />\n    )\n}\n", "import { useCallback, useMemo } from 'react'\n\ninterface IUseLoadStateResult\n{\n    lock: () => void\n    unlock: () => void\n}\n\nexport\nfunction useLoadState\n( lockActions?: boolean ): IUseLoadStateResult\n{\n    const lock = useCallback(() => {\n        document.documentElement.style.cursor = 'wait'\n\n        if ( lockActions ) {\n            document.body.style.pointerEvents = 'none'\n        }\n    }, [ lockActions ])\n\n    const unlock = useCallback(() => {\n        document.documentElement.style.cursor = 'default'\n        document.body.style.pointerEvents     = 'all'\n    }, [])\n\n    return useMemo(() => ({\n        lock,\n        unlock\n    }), [ lock, unlock ])\n}\n", "export { loader } from '~/entrypoints/Download'\n", "import fs from 'fs'\n\nimport { createReadableStreamFromReadable, type LoaderFunctionArgs } from '@remix-run/node'\n\nimport { MIME_TYPES }                     from './consts'\nimport { getPathFromHash, pathIsAllowed } from './helpers'\n\nexport\nasync function loader\n({ request }: LoaderFunctionArgs ): Promise<Response>\n{\n    const params = new URLSearchParams( request.url.split( '?' ).pop() ?? '' )\n    const file   = params.get( 'file' ) ?? ''\n    const hash   = params.get( 'hash' )\n\n    if ( !pathIsAllowed( hash )) {\n        return new Response( 'Access denied', { status: 403 })\n    }\n\n    const path = getPathFromHash( hash, file )\n\n    if ( !path || !fs.existsSync( path )) {\n        return new Response( 'Not found', { status: 404 })\n    }\n\n    const content  = createReadableStreamFromReadable( fs.createReadStream( path ))\n    const filename = path.split( '/' ).pop() ?? ''\n    const mime     = MIME_TYPES[ filename.split( '.' ).pop()?.toLocaleLowerCase() ?? '' ] || MIME_TYPES.default\n\n    return new Response( content, {\n        headers: {\n            'Content-Disposition': `attachment; filename=\"${filename}\"`,\n            'Content-Type':        mime\n        }\n    })\n}\n", "export\nconst MIME_TYPES: Record<string, string> = {\n    default: 'application/octet-stream',\n    html:    'text/html; charset=UTF-8',\n    js:      'application/javascript',\n    css:     'text/css',\n    png:     'image/png',\n    jpg:     'image/jpg',\n    gif:     'image/gif',\n    ico:     'image/x-icon',\n    svg:     'image/svg+xml',\n    mp3:     'audio/mpeg'\n}\n", "import type { IDirInfo, IFSInfo, IPathInfo, ITopPathInfo } from '../types'\n\nimport fs from 'fs'\n\nimport * as path from './path.module'\n\nexport\nfunction read\n( dir: string ): string[]\n{\n    // TODO: Support relative too\n    return fs.readdirSync( dir )\n}\n\nexport\nfunction draft\n( parent?: IDirInfo ): IDirInfo\n{\n    return {\n        type:     'directory',\n        dir:      parent?.path ?? '',\n        draft:    true,\n        relative: '',\n        path:     '',\n        filename: '',\n        size:     0,\n        files:    [],\n        folders:  []\n    }\n}\n\nexport\nfunction create\n( dir: string, name: string ): string | undefined\n{\n    return fs.mkdirSync( path.resolve( dir, name ), { recursive: true })\n}\n\nexport\nfunction find\n( parent: IDirInfo | ITopPathInfo, subfolder: string ): IDirInfo | undefined\n{\n    if ( !subfolder.includes( '/' )) {\n        return parent.folders.find( folder => folder.relative === subfolder )\n    }\n\n    const parts     = subfolder.split( '/' )\n    const subparent = parent.folders.find( folder => folder.relative === parts[ 0 ])\n\n    if ( subparent ) {\n        return find( extendDeep( subparent ), parts.slice( 1 ).join( '/' ))\n    }\n}\n\nexport\nfunction content\n( dir: string ): Pick<IDirInfo, 'files' | 'folders'>\n{\n    const filenames = fs.readdirSync( dir, 'utf8' )\n    const items     = filenames.map( filename => path.stats( dir, filename ))\n    const files     = items.filter( info => info.type === 'file' )\n    const folders   = items.filter( info => info.type === 'directory' ).map( info => extend( dir, info ))\n\n    return {\n        files,\n        folders\n    }\n}\n\nexport\nfunction extend\n( parent: string, target: IFSInfo ): IDirInfo\n{\n    const { files, folders } = content( target.path )\n\n    return {\n        ...target,\n        relative: path.relative( parent, target.path ),\n        files,\n        folders\n    }\n}\n\nexport\nfunction extendDeep\n<T extends IPathInfo>\n( parent: T, topLevel?: string ): T\n{\n    return {\n        ...parent,\n        relative: parent.relative ?? '',\n        folders:  parent.folders.map( folder => extend( topLevel ?? parent.path, folder ))\n    }\n}\n", "import type { IFSInfo, ITopPathInfo } from '../types'\n\nimport fs    from 'fs'\nimport _path from 'path'\n\nimport { hashService }   from '~/services/hash'\nimport { universalPath } from '~/shared/lib/utils/path'\n\nimport * as dir from './dir.module'\n\nexport\nfunction getDir\n( path: string ): string\n{\n    return _path.dirname( path )\n}\n\nexport\nfunction resolve\n( dir: string, file: string ): string\n{\n    return _path.resolve( dir, file )\n}\n\nexport\nfunction relative\n( parent: string, fullpath: string ): string\n{\n    return universalPath( _path.relative( parent, fullpath ))\n}\n\nexport\nfunction stats\n( dir: string, filename: string ): IFSInfo\n{\n    const fullpath = resolve( dir, filename )\n    const stats    = fs.statSync( fullpath )\n\n    return {\n        dir,\n        filename,\n        path: fullpath,\n        type: stats.isDirectory() ? 'directory' : 'file',\n        size: stats.size\n    }\n}\n\nexport\nfunction info\n( path: string ): ITopPathInfo\n{\n    const { files, folders } = dir.content( path )\n\n    return {\n        hash:     hashService.get( path ),\n        relative: '',\n        path,\n        files,\n        folders\n    }\n}\n\nexport\nfunction infoList\n( paths: string[]): ITopPathInfo[]\n{\n    return paths.map( path => info( path ))\n}\n", "import crypto from 'crypto'\n\n// TODO: Not a service?\n\nclass HashService\n{\n    get\n    ( str: string ): string\n    {\n        return (\n            crypto\n                .createHash( 'sha1' )\n                .update( str )\n                .digest( 'hex' )\n        )\n    }\n}\n\nexport\nconst hashService = new HashService()\n", "import type { ITopPathInfo } from '~/services/fs/types'\n\nexport\nfunction universalPath\n( path: string ): string\n{\n    return path.replace( /[\\\\]+/g, '/' )\n}\n\nexport\nfunction relativePath\n( top: ITopPathInfo, path: string ): string\n{\n    return universalPath( path ).replace( top.path, '' )\n}\n", "import type { IFileInfo } from '../types'\n\nimport fs from 'fs'\n\nimport { universalPath } from '~/shared/lib/utils/path'\n\nimport * as path from './path.module'\n\nexport\nfunction getName\n( filename: string ): string\n{\n    return universalPath( filename ).split( '/' ).pop() ?? filename\n}\n\nexport\nfunction read\n( filename: string ): string\n{\n    return fs.readFileSync( path.resolve( process.cwd(), filename ), 'utf8' )\n}\n\nexport\nasync function rename\n( path: string, original: string, update: string ): Promise<void>\n{\n    // eslint-disable-next-line promise/avoid-new\n    await new Promise<void>( resolve => {\n        const from = `${path}/${original}`\n        const to   = `${path}/${update}`\n\n        if ( fs.existsSync( from )) {\n            fs.renameSync( from, to )\n        }\n\n        resolve()\n    })\n}\n\nexport\nasync function move\n( files: string[], target: string ): Promise<void>\n{\n    // eslint-disable-next-line promise/avoid-new\n    await new Promise<void>( resolve => {\n        if ( fs.existsSync( target )) {\n            files.forEach( file => {\n                if ( file !== target && path.getDir( file ) !== target && fs.existsSync( file )) {\n                    fs.rename( file, path.resolve( target, getName( file )), ( err ) => {\n                        if ( err ) {\n                            console.error( 'Move error', err )\n                        }\n                    })\n                } else {\n                    console.error( `Error moving file: ${file}` )\n                }\n            })\n        } else {\n            console.error( `Path not found: ${target}` )\n        }\n\n        resolve()\n    })\n}\n\nexport\nasync function remove\n( list: string[]): Promise<void>\n{\n    // eslint-disable-next-line promise/avoid-new\n    await new Promise<void>( resolve => {\n        list.forEach( path => {\n            fs.rmSync( path, {\n                force:     true,\n                recursive: true\n            })\n        })\n\n        resolve()\n    })\n}\n\nexport\nfunction infoFromFile\n( file: File, parent: string ): IFileInfo\n{\n    return {\n        dir:      parent,\n        filename: file.name,\n        path:     `${parent}/${file.name}`,\n        type:     'file',\n        size:     File.length\n    }\n}\n\nexport\nfunction infoFromFiles\n( files: File[], parent: string ): IFileInfo[]\n{\n    return files.map( file => infoFromFile( file, parent ))\n}\n", "import * as dir  from './modules/dir.module'\nimport * as file from './modules/file.module'\nimport * as path from './modules/path.module'\n\nexport\nconst fsService = {\n    dir,\n    file,\n    path\n}\n", "import { fsService } from '~/services/fs/service'\n\nclass JSONService {\n    read ( path: string ) {\n        try {\n            return JSON.parse( fsService.file.read( path ))\n        } catch ( e: unknown ) {\n            throw new Error( e as string )\n        }\n    }\n}\n\nexport\nconst jsonService = new JSONService()\n", "import { jsonService }   from '~/services/json'\nimport { universalPath } from '~/shared/lib/utils/path'\n\nexport * from './consts'\n\nexport\ninterface IConfig {\n    maxsize: number\n    paths: string[]\n    accept: string[]\n}\n\nclass ConfigService\n{\n    private readonly config: IConfig\n\n    constructor\n    ()\n    {\n        this.config = jsonService.read( './config.json' )\n        this.fixPaths()\n        console.log( '[nanomoln] Config loaded:', this.config )\n    }\n\n    fixPaths\n    (): void\n    {\n        this.config.paths = this.config.paths.map( p => universalPath( p ))\n    }\n\n    get\n    (): IConfig\n    {\n        return this.config\n    }\n\n    getPaths\n    (): string[]\n    {\n        return this.config.paths\n    }\n\n    getAccept\n    (): string[]\n    {\n        return this.config.accept || []\n    }\n\n    allow\n    ( type: string ): boolean\n    {\n        if ( this.config.accept.includes( type )) {\n            return true\n        }\n\n        // TODO: Wildcard types, etc audio/*\n        return false\n    }\n}\n\nexport\nconst configService = new ConfigService()\n", "import { configService } from '~/services/config'\nimport { hashService }   from '~/services/hash'\nimport { universalPath } from '~/shared/lib/utils/path'\n\nexport\nfunction pathIsAllowed\n( hash: string | null ): boolean\n{\n    if ( !hash ) {\n        return false\n    }\n\n    const config    = configService.get()\n    const { paths } = config\n\n    const allowed = paths.some(( top ) => hashService.get( top ) === hash )\n\n    return allowed\n}\n\nexport\nfunction getPathFromHash\n( hash: string | null, file: string | null ): string | undefined\n{\n    if ( !hash || !file ) {\n        return\n    }\n\n    const config    = configService.get()\n    const { paths } = config\n\n    const top = paths.find(( top ) => hashService.get( top ) === hash )\n\n    if ( !top ) {\n        return\n    }\n\n    return universalPath( `${top}/${file}` )\n}\n", "import { FolderPage, loader, meta } from '~/entrypoints/Folder'\n\nexport { loader, meta }\n\nexport default FolderPage\n", "import type { MantineSize } from '@mantine/core'\n\nimport { ActionIcon }      from '@mantine/core'\nimport { IconTrashFilled } from '@tabler/icons-react'\n\nimport { useRemoveConfirmation } from './hooks/useRemoveConfirmation'\n\ninterface IRemoveButtonProps\n{\n    files: string[]\n    size?: MantineSize\n    onRemove?: () => void\n}\n\nexport\nfunction RemoveButton\n({ files, size, onRemove }: IRemoveButtonProps )\n{\n    const { confirm } = useRemoveConfirmation( files, onRemove )\n\n    return (\n\n        <>\n            <ActionIcon\n                color=\"red\"\n                size={ size ?? 'lg' }\n                variant='subtle'\n                onClick={confirm}\n            >\n                <IconTrashFilled size={20} />\n            </ActionIcon>\n        </>\n    )\n}\n", "import type { ReactNode } from 'react'\n\nimport { Button }               from '@mantine/core'\nimport { useCallback, useMemo } from 'react'\n\nimport { useFilesHandlers }     from '~/services/folder/hooks/useFilesHandlers'\nimport { useFolder }            from '~/services/folder/hooks/useFolder'\nimport { useConfirmationPopup } from '~/shared/popups/Confirmation'\n\ninterface IRemoveConfirmationPayload\n{\n    list: string[]\n    onRemove?: () => void\n}\n\nfunction RemoveConfirmationContent\n({ list }: IRemoveConfirmationPayload ): ReactNode\n{\n    const { data: folder } = useFolder()\n\n    const getRemoveList = useCallback(\n        (): string => {\n            const dirs: string[]  = list.filter( name => folder?.folders.find( f => f.path === name ))\n            const files: string[] = list.filter( name => folder?.files.find( f => f.path === name ))\n\n            let res = ''\n\n            if ( files.length > 0 && dirs.length > 0 ) {\n                res = `${files.length} ${files.length === 1 ? 'file' : 'files'} and ${dirs.length} ${dirs.length === 1 ? 'directory' : 'directories'}`\n            } else {\n                if ( files.length > 0 ) {\n                    res = files.length === 1\n                        ? files[ 0 ]\n                        : `${files.length} files`\n                } else if ( dirs.length > 0 ) {\n                    res = dirs.length === 1\n                        ? dirs[ 0 ]\n                        : `${dirs.length} directories`\n                }\n            }\n\n            return res\n        },\n        [ list, folder ]\n    )\n\n    return (\n        <>\n            <p>Are you sure to remove {getRemoveList()}?</p>\n        </>\n    )\n}\n\nfunction RemoveConfirmationButtons\n({ list, onRemove }: IRemoveConfirmationPayload ): ReactNode\n{\n    const { hide }   = useConfirmationPopup()\n    const { remove } = useFilesHandlers()\n\n    const handleRemove = useCallback(\n        (): void =>\n        {\n            void remove( list )\n            hide()\n            onRemove?.()\n        },\n        [ list, hide, remove, onRemove ]\n    )\n\n    return (\n        <>\n            <Button style={{ marginRight: 'auto' }} variant=\"subtle\" onClick={hide}>\n                Cancel\n            </Button>\n\n            <Button color=\"red\" onClick={handleRemove}>\n                Remove\n            </Button>\n        </>\n    )\n}\n\ninterface IUseRemoveConfirmationResult\n{\n    confirm: () => void\n}\n\nexport\nfunction useRemoveConfirmation\n( files: string[], onRemove?: () => void ): IUseRemoveConfirmationResult\n{\n    const { show } = useConfirmationPopup()\n\n    const confirm = useCallback(\n        () =>\n        {\n            show(\n                'Removing files',\n                <RemoveConfirmationContent list={files} />,\n                <RemoveConfirmationButtons list={files} onRemove={onRemove} />\n            )\n        },\n        [ show, files, onRemove ]\n    )\n\n    return useMemo(() => ({ confirm }), [ confirm ])\n}\n", "import type { IListItemData } from '~/shared/ui-kit/List/types'\n\nimport { useCallback, useMemo } from 'react'\n\nimport { apiService }           from '~/services/api'\nimport { infoFromFiles }        from '~/services/fs/modules/file.module'\nimport { useFilesStoreActions } from '~/shared/stores/files'\n\nimport { useFolder } from './useFolder'\n\ninterface IFIlesHandlersResult\n{\n    rename: ( item: IListItemData, name: string ) => Promise<void>\n    move: ( source: string[], target: string ) => Promise<void>\n    upload: ( files: File[], target: string ) => Promise<void>\n    remove: ( list: string[]) => Promise<void>\n}\n\nexport\nfunction useFilesHandlers\n(): IFIlesHandlersResult\n{\n    const { data, reload } = useFolder()\n    const { lock, temp }   = useFilesStoreActions()\n\n    const rename = useCallback(\n        async ( item: IListItemData, raw: string ) =>\n        {\n            const name = raw.split( /(\\/|\\\\)/ )[ 0 ]\n\n            if ( data && item.draft ) {\n                if ( name && name !== item.text ) {\n                    if ( item.text ) {\n                        await apiService.rename( data.path, item.text, name )\n                    } else {\n                        await apiService.createFolder( data.path, name )\n                    }\n                }\n\n                reload?.()\n            }\n        },\n        [ data, reload ]\n    )\n\n    const move = useCallback(\n        async ( source: string[], target: string ) =>\n        {\n            if ( !source.includes( target )) {\n                lock( source )\n                await apiService.moveFiles( source, target )\n                reload?.()\n            }\n        },\n        [ reload, lock ]\n    )\n\n    const upload = useCallback(\n        async ( files: File[], target: string ) =>\n        {\n            const tmp = infoFromFiles( files, target )\n\n            temp( tmp )\n            lock( tmp.map( f => f.filename ))\n\n            await apiService.uploadFiles( files, target )\n\n            reload?.()\n        },\n        [ lock, temp, reload ]\n    )\n\n    const remove = useCallback(\n        async ( list: string []) =>\n        {\n            lock( list )\n\n            await apiService.removeFiles( list )\n\n            reload?.()\n        },\n        [ lock, reload ]\n    )\n\n    return useMemo(\n        () => ({\n            rename,\n            move,\n            upload,\n            remove\n        }),\n        [ rename, move, upload, remove ]\n    )\n}\n", "import type { IDirInfo, IFileInfo } from '~/services/fs/types'\n\nclass ApiService\n{\n    async post\n    <T>\n    ( url: string, body: unknown ): Promise<T>\n    {\n        const resp = await fetch( url, {\n            method: 'POST',\n            body:   JSON.stringify( body )\n        })\n\n        return await resp.json()\n    }\n\n    async rename\n    ( path: string, original: string, update: string ): Promise<void>\n    {\n        await this.post( '/api/folders/rename', {\n            path,\n            original,\n            update\n        })\n    }\n\n    async createFolder\n    ( path: string, name: string ): Promise<void>\n    {\n        await this.post( '/api/folders/create', {\n            path,\n            name\n        })\n    }\n\n    async getFolders\n    ( path: string, top: string ): Promise<IDirInfo[]>\n    {\n        return await this.post( '/api/folders', {\n            path,\n            top\n        })\n    }\n\n    async getFiles\n    ( path: string ): Promise<IFileInfo[]>\n    {\n        return await this.post( '/api/folders/files', { path })\n    }\n\n    async moveFiles\n    ( files: string[], target: string ): Promise<void>\n    {\n        await this.post( '/api/folders/move', {\n            files,\n            target\n        })\n    }\n\n    async uploadFiles\n    ( files: File[], target: string ): Promise<void>\n    {\n        const data = new FormData()\n\n        files.forEach( file => {\n            data.append( 'file', file )\n        })\n\n        await fetch( `/api/folders/upload?target=${encodeURIComponent( target )}`, {\n            method: 'POST',\n            body:   data\n        })\n    }\n\n    async removeFiles\n    ( list: string[]): Promise<void>\n    {\n        await this.post( '/api/folders/remove', { list })\n    }\n}\n\nexport\nconst apiService = new ApiService()\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\ntype TPartialRecord<T> = Partial<Record<keyof T, unknown>>\n\nexport\nfunction applyValues\n<T extends Record<string, any>>\n( source: Partial<T>, target: T ): T\n{\n    const res: T = { ...target }\n\n    ;( Object.keys( source ) as Array<keyof T> )\n        .forEach(\n            ( key: keyof T ) =>\n            {\n                res[ key ] = source[ key ] as T[keyof T]\n            }\n        )\n\n    return res\n}\n\nexport\nfunction getKeys\n<T extends TPartialRecord<T>>\n( obj: T ): Array<keyof T>\n{\n    return Object.keys( obj ) as Array<keyof T>\n}\n\nexport\nfunction extract\n<T extends TPartialRecord<T>>\n( obj: T, keys: Array<keyof T> ): Partial<T>\n{\n    const res: Partial<T> = {}\n\n    keys.forEach( key => {\n        res[ key ] = obj[ key ]\n    })\n\n    return res\n}\n\nexport\nfunction extractMap\n<T extends TPartialRecord<T>>\n( keys: Array<keyof T> )\n{\n    return ( obj: T ) => extract( obj, keys )\n}\n\nexport\nfunction exclude\n<T extends TPartialRecord<T>>\n( obj: T, ex: Array<keyof T> ): Partial<T>\n{\n    const res: Partial<T> = {}\n    const keys = getKeys( obj )\n\n    keys.forEach( key => {\n        if ( !ex.includes( key )) {\n            res[ key ] = obj[ key ]\n        }\n    })\n\n    return res\n}\n\nexport\nfunction excludeMap\n<T extends TPartialRecord<T>>\n( keys: Array<keyof T> )\n{\n    return ( obj: T ) => exclude( obj, keys )\n}\n", "import type { UseBoundStore, StoreApi } from 'zustand'\n\nimport { extractMap, getKeys, excludeMap } from '~/shared/lib/utils/object'\n\ntype TStoreHook<T> = () => T\ntype TZustandHook<T> = UseBoundStore<StoreApi<T>>\n\nexport\nfunction generateStore\n<Data, Actions>\n( initial: Data, hook: TZustandHook<Data & Actions> ): [ TStoreHook<Data>, TStoreHook<Actions> ]\n{\n    return [\n        (): Data => {\n            return hook( extractMap( getKeys( initial ))) as Data\n        },\n        (): Actions => {\n            return hook( excludeMap( getKeys( initial ))) as Actions\n        }\n    ]\n}\n", "import type { ITopPathInfo, IPathInfo, IFileInfo } from '~/services/fs/types'\n\nexport\ninterface IFilesStoreData\n{\n    top?: ITopPathInfo\n    paths?: ITopPathInfo[]\n    folder?: IPathInfo\n    locked: string[]\n    temporary: IFileInfo[]\n}\n\nexport\nconst filesStoreInitial: IFilesStoreData = {\n    top:       undefined,\n    paths:     undefined,\n    folder:    undefined,\n    locked:    [],\n    temporary: []\n}\n", "import type { IFilesStoreData } from './data'\nimport type { IFileInfo }       from '~/services/fs/types'\n\nimport { create } from 'zustand'\n\nimport { filesStoreInitial } from './data'\n\nexport\ninterface IFilesStoreActions\n{\n    lock: ( list: string[]) => void\n    temp: ( list: IFileInfo[]) => void\n    force: ( value: Partial<IFilesStoreData> ) => void\n    update: ( value: Partial<IFilesStoreData> ) => void\n}\n\nexport\ntype IFilesStore = IFilesStoreData & IFilesStoreActions\n\nexport\nconst useFilesStore = create<IFilesStore>(\n    ( set ) => ({\n        ...filesStoreInitial,\n        lock: ( locked: string[]) => {\n            set({ locked })\n        },\n        temp: ( temporary: IFileInfo[]) => {\n            set({ temporary })\n        },\n        force: ( value: Partial<IFilesStoreData> ) => {\n            set({\n                ...filesStoreInitial,\n                ...value\n            })\n        },\n        update: ( value: Partial<IFilesStoreData> ) => {\n            set({\n                ...value,\n                temporary: []\n            })\n        }\n    })\n)\n", "import type { IFilesStoreData }    from './data'\nimport type { IFilesStoreActions } from './store'\n\nimport { generateStore } from '~/shared/stores/generator'\n\nimport { filesStoreInitial } from './data'\nimport { useFilesStore }     from './store'\n\nexport type { IFilesStoreActions, IFilesStoreData }\n\nconst [ useFilesStoreData, useFilesStoreActions ] = generateStore<IFilesStoreData, IFilesStoreActions>( filesStoreInitial, useFilesStore )\n\nexport {\n    useFilesStoreData,\n    useFilesStoreActions\n}\n", "import type { IFSInfo, IPathInfo } from '~/services/fs/types'\n\nimport { useMemo } from 'react'\n\nimport { useFilesStoreData } from '~/shared/stores/files'\n\nimport { useCreateFolder } from './useCreateFolder'\nimport { useEditInFolder } from './useEditInFolder'\nimport { useReload }       from './useReload'\n\nconst sorter = ( a: IFSInfo, b: IFSInfo ): number => a.filename.toLocaleLowerCase().localeCompare( b.filename.toLocaleLowerCase())\n\ninterface IUseFolderResult {\n    data?: IPathInfo\n    reload: ReturnType<typeof useReload>\n    create: ReturnType<typeof useCreateFolder>\n    edit: ReturnType<typeof useEditInFolder>\n}\n\nexport\nfunction useFolder\n(): IUseFolderResult\n{\n    const { folder, top, temporary } = useFilesStoreData()\n\n    const reload = useReload()\n    const create = useCreateFolder()\n    const edit   = useEditInFolder()\n\n    const content = useMemo(() => { return folder ?? top }, [ folder, top ])\n\n    const data = useMemo(() => (\n        content\n            ? {\n                ...content,\n                folders: content.folders.sort( sorter ),\n                files:   [\n                    ...content.files,\n                    ...temporary.filter( f => !content.files.find( cf => cf.filename === f.filename ))\n                ].sort( sorter )\n            }\n            : content\n    ), [ temporary, content ])\n\n    return {\n        data,\n        reload,\n        create,\n        edit\n    }\n}\n", "import { useCallback } from 'react'\n\nimport { useFilesStoreData, useFilesStoreActions } from '~/shared/stores/files'\n\nimport { createFolderIn } from './helpers'\n\ntype TUseCreateFolderResult = () => void\n\nexport\nfunction useCreateFolder\n(): TUseCreateFolderResult\n{\n    const { folder, top } = useFilesStoreData()\n    const { update }      = useFilesStoreActions()\n\n    const handler = useCallback(\n        () =>\n        {\n            if ( update ) {\n                const payload = createFolderIn( folder, top )\n\n                if ( payload ) {\n                    update( payload )\n                }\n            }\n        },\n        [ folder, top, update ]\n    )\n\n    return handler\n}\n", "import { draft } from './modules/dir.module'\n\nexport\nconst fsClientService = { dir: { draft } }\n", "import type { IDirInfo, IFSEditable, IFSInfo, IFileInfo, IPathInfo, ITopPathInfo } from '~/services/fs/types'\nimport type { IFilesStoreData }                                                    from '~/shared/stores/files'\n\nimport { apiService }      from '~/services/api'\nimport { fsClientService } from '~/services/fs/client.service'\n\nexport\nasync function getFiles\n<T extends IPathInfo>\n( key: string, data: T, topPath: string ): Promise<Partial<IFilesStoreData>>\n{\n    const folders = await apiService.getFolders( data.path, topPath )\n    const files   = await apiService.getFiles( data.path )\n\n    return {\n        [ key ]: {\n            ...data,\n            folders,\n            files\n        }\n    }\n}\n\nexport\nasync function reloadData\n( folder?: IPathInfo, top?: ITopPathInfo ): Promise<Partial<IFilesStoreData>>\n{\n    if ( folder ) {\n        return await getFiles( 'folder', folder, top?.path ?? folder.path )\n    }\n\n    if ( top ) {\n        return await getFiles( 'top', top, top.path )\n    }\n\n    return {}\n}\n\nexport\nfunction hasDraft\n( target?: IPathInfo | ITopPathInfo ): boolean\n{\n    return !!target?.folders.find(( f: IDirInfo ) => !!f.draft )\n}\n\nexport\nfunction isDir\n( item: IFileInfo | IDirInfo ): item is IDirInfo\n{\n    return !!( item as IDirInfo ).relative\n}\n\nexport\nfunction addFolder\n<T extends IPathInfo>\n( target: T, dir: IDirInfo ): T\n{\n    if ( !target ) {\n        return target\n    }\n\n    return {\n        ...target,\n        folders: [\n            ...target.folders,\n            dir\n        ]\n    }\n}\n\nexport\nfunction applyDraft\n<T extends IFSInfo & IFSEditable>\n( list: T[], item: T ): T[]\n{\n    return list.map( f => {\n        if ( f.path === item.path ) {\n            return {\n                ...f,\n                draft: true\n            }\n        }\n\n        return f\n    })\n}\n\nexport\nfunction flushDraft\n<T extends IPathInfo>\n( target: T ): T\n{\n    return {\n        ...target,\n        folders: target.folders.map( f => ({\n            ...f,\n            draft: false\n        })),\n        files: target.files.map( f => ({\n            ...f,\n            draft: false\n        }))\n    }\n}\n\nexport\nfunction editItem\n<T extends IPathInfo>\n( item: IFileInfo | IDirInfo, target: T ): T\n{\n    if ( !target || !item ) {\n        return target\n    }\n\n    if ( isDir( item )) {\n        return {\n            ...target,\n            folders: applyDraft( target.folders, item )\n        }\n    } else {\n        return {\n            ...target,\n            files: applyDraft( target.files, item )\n        }\n    }\n}\n\nexport\nfunction createFolderIn\n( folder?: IPathInfo, top?: ITopPathInfo ): Partial<IFilesStoreData> | undefined\n{\n    const draft = fsClientService.dir.draft()\n\n    if ( folder && !hasDraft( folder )) {\n        return { folder: addFolder( folder, draft ) }\n    }\n\n    if ( top && !hasDraft( top )) {\n        return { top: addFolder( top, draft ) }\n    }\n}\n\nexport\nfunction editFolderIn\n( item: IFileInfo | IDirInfo, folder?: IPathInfo, top?: ITopPathInfo ): Partial<IFilesStoreData> | undefined\n{\n    if ( folder ) {\n        return { folder: editItem( item, flushDraft( folder )) }\n    }\n\n    if ( top ) {\n        return { top: editItem( item, flushDraft( top )) }\n    }\n}\n", "import type { IDirInfo, IFileInfo } from '~/services/fs/types'\n\nimport { useCallback } from 'react'\n\nimport { useFilesStoreData, useFilesStoreActions } from '~/shared/stores/files'\n\nimport { editFolderIn } from './helpers'\n\ntype TUseEditInFolderResult = ( item: IFileInfo | IDirInfo ) => void\n\nexport\nfunction useEditInFolder\n(): TUseEditInFolderResult\n{\n    const { folder, top } = useFilesStoreData()\n    const { update }      = useFilesStoreActions()\n\n    const handler = useCallback(\n        ( item: IFileInfo | IDirInfo ) =>\n        {\n            if ( update ) {\n                const payload = editFolderIn( item, folder, top )\n\n                if ( payload ) {\n                    update( payload )\n                }\n            }\n        },\n        [ folder, top, update ]\n    )\n\n    return handler\n}\n", "import { useCallback } from 'react'\n\nimport { useFilesStoreData, useFilesStoreActions } from '~/shared/stores/files'\n\nimport { reloadData } from './helpers'\n\ntype TUseReloadResult = () => void\n\nexport\nfunction useReload\n(): TUseReloadResult\n{\n    const { top, folder } = useFilesStoreData()\n    const { update }      = useFilesStoreActions()\n\n    const handler = useCallback(\n        () =>\n        {\n            if ( update ) {\n                // eslint-disable-next-line promise/always-return\n                void reloadData( folder, top ).then( data => {\n                    update({\n                        ...data,\n                        locked: []\n                    })\n                })\n            }\n        },\n        [ folder, top, update ]\n    )\n\n    return handler\n}\n", "import type { ISelection } from '~/shared/lib/hooks/useSelection'\n\nimport { RemoveButton } from '../RemoveButton'\n\ninterface ISelectionActionsProps\n{\n    selection: ISelection<string>\n}\n\nexport\nfunction SelectionActions\n({ selection }: ISelectionActionsProps )\n{\n    if ( !selection || selection.selected.length < 1 ) {\n        return <></>\n    }\n\n    return (\n        <>\n            <RemoveButton files={selection.selected} onRemove={selection.reset} />\n        </>\n    )\n}\n", "import type { IFileCellSharedProps } from './types';\nimport type { ReactNode } from 'react';\n\nimport { Table } from '@mantine/core';\nimport cn from 'classnames';\n\nimport { lastCellWidth } from './consts';\nimport styles from './file-cell.module.css';\n\ninterface IFileCellActionsProps extends\n  IFileCellSharedProps\n{\n  actions?: ReactNode;\n}\n\nexport\nfunction FileCellActions(\n{ visible, actions }: IFileCellActionsProps): ReactNode\n{\n  if (!visible || !actions) {\n    return null;\n  }\n\n  return (\n    <Table.Td className={cn(styles.pullRight, styles.showOnHover)} w={lastCellWidth}>\n            <div className={styles.actions}>\n                {actions}\n            </div>\n        </Table.Td>);\n\n}", "export\nconst lastCellWidth = '200px'\n", "export default {\"faded\":\"file-cell-module__faded__gnp3A\",\"link\":\"file-cell-module__link__HN-kO\",\"hideOnHover\":\"file-cell-module__hideOnHover__-1MGa\",\"showOnHover\":\"file-cell-module__showOnHover__kxecj\",\"pullRight\":\"file-cell-module__pullRight__w5N5L\",\"actions\":\"file-cell-module__actions__70m97\",\"icon\":\"file-cell-module__icon__3ydyO\",\"fixed\":\"file-cell-module__fixed__jrqHC\"};", "import type { IFileCellSharedProps } from './types';\nimport type { ReactNode } from 'react';\n\nimport { Table } from '@mantine/core';\n\nimport { BlockLink } from '~/shared/ui-kit/BlockLink';\nimport { EditInput } from '~/shared/ui-kit/EditInput';\n\nimport styles from './file-cell.module.css';\n\ninterface IFileCellContentProps extends\n  IFileCellSharedProps\n{\n  text: string;\n  link?: string;\n  draft?: boolean;\n  onSave?: (value: string) => void;\n}\n\nexport\nfunction FileCellContent(\n{ visible, draft, text, link, onSave }: IFileCellContentProps): ReactNode\n{\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Table.Td maw=\"100%\">\n            {\n      draft && onSave ?\n\n      <EditInput value={text} onSave={onSave} /> :\n\n\n      link ?\n\n      <BlockLink className={styles.link} to={link}>\n                                    {text}\n                                </BlockLink> :\n\n\n\n      <div className={styles.file}>\n                                    {text}\n                                </div>}\n\n\n\n        </Table.Td>);\n\n}", "import type { RemixLinkProps } from '@remix-run/react/dist/components';\n\nimport { Anchor } from '@mantine/core';\nimport { Link } from '@remix-run/react';\nimport cn from 'classnames';\n\nimport styles from './block-link.module.css';\n\ninterface IBlockLinksProps extends\n  RemixLinkProps\n{\n  classNames?: string;\n}\n\nexport\nfunction BlockLink(\n{ to, children, className }: IBlockLinksProps)\n{\n  return (\n    <Anchor\n      c=\"primary.1\"\n      className={cn(styles.link, className)}\n      component={Link}\n      to={to}>\n\n            <span>\n                {children}\n            </span>\n        </Anchor>);\n\n}", "export default {\"link\":\"block-link-module__link__7dNV8\"};", "import type { ChangeEvent, KeyboardEvent } from 'react'\n\nimport { TextInput }             from '@mantine/core'\nimport { useCallback, useState } from 'react'\n\ninterface IEditInputProps\n{\n    value?: string\n    onSave: ( value: string ) => void\n}\n\nexport\nfunction EditInput\n({ value, onSave }: IEditInputProps )\n{\n    const [ innerValue, $innerValue ] = useState<string>( value ?? '' )\n    const [ loading, $loading ]       = useState<boolean>( false )\n\n    const handleChange = ( e: ChangeEvent<HTMLInputElement> ) => {\n        $innerValue( e.currentTarget.value )\n    }\n\n    const handleKeyPress = ( e: KeyboardEvent<HTMLInputElement> ) => {\n        if ( e.key === 'Enter' ) {\n            handleSave()\n        }\n    }\n\n    const handleSave = useCallback(() => {\n        $loading( true )\n        onSave( innerValue )\n    }, [ innerValue, onSave ])\n\n    return (\n        <TextInput\n            autoFocus\n            disabled={loading}\n            value={innerValue}\n            onChange={handleChange}\n            onKeyUp={handleKeyPress}\n        />\n    )\n}\n", "import type { IFileCellSharedProps } from './types';\nimport type { ReactNode } from 'react';\n\nimport { Table, Center } from '@mantine/core';\nimport cn from 'classnames';\n\nimport styles from './file-cell.module.css';\n\ninterface IFileCellIconProps extends\n  IFileCellSharedProps\n{\n  icon?: ReactNode;\n}\n\nexport\nfunction FileCellIcon(\n{ visible, icon }: IFileCellIconProps): ReactNode\n{\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Table.Td className={cn(styles.icon, styles.faded)} w=\"40px\">\n            <Center>\n                {icon}\n            </Center>\n        </Table.Td>);\n\n}", "import type { IFileCellSharedProps } from './types';\nimport type { ReactNode } from 'react';\n\nimport { Table } from '@mantine/core';\nimport cn from 'classnames';\n\nimport { lastCellWidth } from './consts';\nimport styles from './file-cell.module.css';\n\ninterface IFileCellInfoProps extends\n  IFileCellSharedProps\n{\n  info?: ReactNode;\n  actions: boolean;\n}\n\nexport\nfunction FileCellInfo(\n{ visible, info, actions }: IFileCellInfoProps): ReactNode\n{\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Table.Td className={cn(styles.faded, actions && styles.hideOnHover)} w={lastCellWidth}>\n            {info}\n        </Table.Td>);\n\n}", "import type { IFileCellSharedProps } from './types';\n\nimport { Table, Checkbox } from '@mantine/core';\nimport { useCallback, type ChangeEvent, type ReactNode } from 'react';\n\nimport styles from './file-cell.module.css';\n\ninterface IFileCellSelectProps extends\n  IFileCellSharedProps\n{\n  checked?: boolean;\n  onToggle?: (state: boolean) => void;\n}\n\nexport\nfunction FileCellSelect(\n{ visible, checked, onToggle }: IFileCellSelectProps): ReactNode\n{\n  const handleToggle = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onToggle?.(e.currentTarget.checked);\n    },\n    [onToggle]\n  );\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Table.Td className={styles.fixed} w=\"40px\">\n            <Checkbox checked={checked} onChange={handleToggle} />\n        </Table.Td>);\n\n}", "import type { ReactNode }             from 'react'\nimport type { IListItemContentProps } from '~/shared/ui-kit/List/types'\n\nimport { FileCellSelect, FileCellIcon, FileCellContent, FileCellInfo, FileCellActions } from './cells'\n\nexport\nfunction FileRow\n({ item, checked, onToggle, onSave }: IListItemContentProps ): ReactNode\n{\n    return (\n        <>\n            <FileCellSelect\n                checked={checked}\n                visible={item.selectable}\n                onToggle={onToggle}\n            />\n\n            <FileCellIcon visible={item.showIcon} {...item} />\n\n            <FileCellContent\n                visible\n                {...item}\n                onSave={onSave}\n            />\n\n            <FileCellInfo visible={!item.draft} {...item} actions={!!item.actions} />\n            <FileCellActions visible={!item.draft} {...item} />\n        </>\n    )\n}\n", "import type { IListConfig, IListItem, IListItemContentProps, IListItemData } from './types'\nimport type { JSXElementConstructor, ReactNode }                             from 'react'\nimport type { ISelection }                                                   from '~/shared/lib/hooks/useSelection'\n\nimport { DndProvider }  from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { useListConfig }   from './hooks/useListConfig'\nimport { useListHandlers } from './hooks/useListHandlers'\nimport { ListView }        from './view'\nimport { ListHeader }      from './view/ListHeader'\n\ninterface IListProps\n{\n    data: IListItem[]\n    config?: IListConfig\n    selection?: ISelection<string>\n    selectionActions?: ReactNode\n\n    component: JSXElementConstructor<IListItemContentProps>\n\n    onChange?: ( item: IListItemData, name: string ) => Promise<void>\n    onDrop?: ( source: string[], target: string ) => Promise<void>\n}\n\nexport\nfunction List\n({ data, component, config, selection, selectionActions, onChange, onDrop }: IListProps )\n{\n    const viewConfig = useListConfig( config )\n    const handlers   = useListHandlers( data, selection, onChange, onDrop )\n\n    const { selected, empty } = selection ?? {}\n\n    const content = (\n        <ListView\n            component={component}\n            config={viewConfig}\n            data={data}\n            handlers={handlers}\n            selection={selection}\n        >\n            {\n                selected && (\n                    <ListHeader\n                        selected={!empty}\n                        selection={selected}\n                        selectionActions={selectionActions}\n                        total={data.length}\n                        onSelectAll={handlers.selectAll}\n                    />\n                )\n            }\n        </ListView>\n    )\n\n    if ( viewConfig.draggable ) {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                { content }\n            </DndProvider>\n        )\n    }\n\n    return content\n}\n", "import type { IListConfig } from '../types'\n\nexport\nfunction useListConfig\n( initialConfig?: IListConfig ): IListConfig\n{\n    const { selectable, draggable, locked } = initialConfig ?? {}\n    const showIcons                         = initialConfig?.showIcons === undefined ? true : initialConfig.showIcons\n\n    return {\n        draggable:  !!draggable,\n        selectable: !!selectable,\n        locked:     locked ?? [],\n        showIcons\n    }\n}\n", "import type { IListItem, IListItemData } from '../types'\nimport type { ISelection }               from '~/shared/lib/hooks/useSelection'\n\nimport { useCallback } from 'react'\n\nexport\ninterface IListHandlers\n{\n    change: ( item: IListItem ) => ( val: string ) => void\n    drop: ( source: string[], target: string ) => void\n    select: ( path?: string ) => () => void\n    selectAll: () => void\n    isSelected?: ISelection<string>['isSelected']\n}\n\nexport\nfunction useListHandlers\n(\n    data: IListItem[],\n    selection?: ISelection<string>,\n    onChange?: ( item: IListItemData, name: string ) => Promise<void>,\n    onDrop?: ( source: string[], target: string ) => Promise<void>\n\n): IListHandlers\n{\n    const { isSelected, onSelect } = selection ?? {}\n\n    const handleSelect = useCallback(\n        ( path?: string ) => () => {\n            if ( path ) {\n                onSelect?.( path )\n            }\n        },\n        [ onSelect ]\n    )\n\n    const handleSelectAll = useCallback(\n        () => {\n            onSelect?.( data.filter( item => !!item.path ).map( item => item.path ?? '' ))\n        },\n        [ onSelect, data ]\n    )\n\n    const handleChange = useCallback(\n        ( item: IListItemData ) => ( name: string ) => {\n            void onChange?.( item, name )\n        },\n        [ onChange ]\n    )\n\n    const handleDrop = useCallback(\n        ( source: string[], target: string ) => {\n            void onDrop?.( source, target )\n        },\n        [ onDrop ]\n\n    )\n\n    return {\n        change:    handleChange,\n        drop:      handleDrop,\n        isSelected,\n        select:    handleSelect,\n        selectAll: handleSelectAll\n    }\n}\n", "import type { IListHandlers } from '../hooks/useListHandlers';\nimport type { IListConfig, IListItem, IListItemContentProps } from '../types';\nimport type { JSXElementConstructor, PropsWithChildren } from 'react';\nimport type { ISelection } from '~/shared/lib/hooks/useSelection';\n\nimport { Loader, ScrollArea, Table } from '@mantine/core';\n\nimport { ListItem } from './ListItem';\nimport styles from './list.module.css';\n\ninterface IListViewProps extends\n  PropsWithChildren\n{\n  data: IListItem[];\n  selection?: ISelection<string>;\n  component: JSXElementConstructor<IListItemContentProps>;\n  config: IListConfig;\n  handlers: IListHandlers;\n}\n\nexport\nfunction ListView(\n{ data, selection, component, config, children, handlers }: IListViewProps)\n{\n  const { selectable, draggable, locked } = config ?? {};\n\n  const showIcons = config?.showIcons === undefined ? true : config.showIcons;\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const isLocked = (item: Partial<IListItem>) => locked?.includes(item.path ?? '') || locked?.includes(item.text ?? '');\n\n  return (\n    <ScrollArea>\n            <Table\n        highlightOnHover\n        classNames={styles}\n        horizontalSpacing=\"0\"\n        miw={800}\n        verticalSpacing=\"sm\">\n\n                {children}\n\n                <Table.Tbody>\n                    {\n          data.map(({ key, ...props }: IListItem) =>\n          <ListItem\n            key={key}\n            checked={handlers.isSelected?.(key)}\n            component={component}\n            draggable={draggable}\n            locked={isLocked(props)}\n            selection={selection}\n            item={{\n              ...props,\n              icon:\n              !props.icon && isLocked(props) ?\n\n              <Loader color=\"gray\" size=\"xs\" /> :\n\n              props.icon,\n\n              selectable,\n              showIcon: showIcons\n            }}\n            onDrop={handlers.drop}\n            onToggle={handlers.select?.(props.path)}\n            onSave={handlers.change({\n              key,\n              ...props\n            })} />\n\n          )}\n\n                </Table.Tbody>\n            </Table>\n        </ScrollArea>);\n\n}", "import type { IListItemProps } from '../../types';\nimport type { ReactNode } from 'react';\n\nimport { Table } from '@mantine/core';\nimport cn from 'classnames';\n\nimport { useDnDList } from '../../hooks/useDnDList';\nimport { extractDnDData } from '../../utils';\n\nimport styles from './list-item.module.css';\n\nexport\nfunction DraggableListItem(\n{ selection, onDrop, ...props }: Omit<IListItemProps, 'draggable'>): ReactNode\n{\n  const { item } = props;\n\n  const { ref, isDragging, isOver } = useDnDList('file', extractDnDData(item), selection, onDrop);\n\n  const Component = props.component;\n\n  return (\n    <Table.Tr ref={ref} className={cn(props.locked && styles.locked, isDragging && styles.drag, isOver && styles.drop)}>\n            <Component {...props} />\n        </Table.Tr>);\n\n}", "import type { IListDnDPayload } from '../types'\nimport type { RefObject }       from 'react'\nimport type { ISelection }      from '~/shared/lib/hooks/useSelection'\n\nimport { useRef }           from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\n\nfunction asPaths\n( list: string[]): IListDnDPayload[]\n{\n    return list.map( path => ({ path }))\n}\n\ninterface IUseDnDResult\n{\n    ref: RefObject<HTMLTableRowElement>\n    isDragging: boolean\n    isOver: boolean\n}\n\nexport\nfunction useDnDList\n(\n    type: string,\n    data: IListDnDPayload,\n    selection?: ISelection<string>,\n    onDrop?: ( source: string[], target: string ) => void\n): IUseDnDResult\n{\n    const ref = useRef<HTMLTableRowElement>( null )\n\n    const [ { isDragging }, drag ] = useDrag<IListDnDPayload[], unknown, { isDragging: boolean }>(\n        () => ({\n            type,\n            item:    () => selection?.selected && selection?.selected?.length > 0 ? asPaths( selection.selected ) : [ data ],\n            canDrag: () => { return !!data.drag },\n            collect: ( monitor ) => ({ isDragging: !!monitor.isDragging() })\n        }),\n        [ selection ]\n    )\n\n    const [ { isOver, canDrop }, drop ] = useDrop<IListDnDPayload[], unknown, { isOver: boolean, canDrop: boolean }>(\n        () => ({\n            accept:  type,\n            canDrop: ( items ) => {\n                return !!data.drop && !items.find( item => item.path === data.path )\n            },\n            drop: ( items ) => {\n                if ( data.path ) {\n                    onDrop?.( items.map( item => item.path ?? '' ), data.path )\n                }\n            },\n            collect: ( monitor ) => ({\n                isOver:  !!monitor.isOver(),\n                canDrop: !!monitor.canDrop()\n            })\n        })\n    )\n\n    drop( drag( ref ))\n\n    return {\n        ref,\n        isDragging,\n        isOver: canDrop && isOver\n    }\n}\n", "import type { IListDnDPayload, IListItemData } from './types'\n\nexport\nfunction extractDnDData\n( item: IListItemData ): IListDnDPayload\n{\n    return {\n        path: item.path,\n        drag: !item.draft,\n        drop: item.acceptDrop\n    }\n}\n", "export default {\"drag\":\"list-item-module__drag__hYjIl\",\"drop\":\"list-item-module__drop__VSAdj\",\"locked\":\"list-item-module__locked__uCQKv\"};", "import type { IListItemProps } from '../../types';\nimport type { ReactNode } from 'react';\n\nimport { Table } from '@mantine/core';\nimport cn from 'classnames';\n\nimport styles from './list-item.module.css';\n\nexport\nfunction StaticListItem(\nprops: Omit<IListItemProps, 'draggable'>): ReactNode\n{\n  const Component = props.component;\n\n  return (\n    <Table.Tr\n      className={cn(props.locked && styles.locked)}\n      style={{\n        userDrag: 'none',\n        WebkitUserDrag: 'none'\n      }}>\n\n            <Component {...props} />\n        </Table.Tr>);\n\n}", "import type { IListItemProps } from '../../types'\n\nimport { DraggableListItem } from './draggable'\nimport { StaticListItem }    from './static'\n\nexport\nfunction ListItem\n({ draggable, ...props }: IListItemProps )\n{\n    return draggable\n        ? <DraggableListItem {...props} />\n        : <StaticListItem {...props} />\n}\n", "export default {\"table\":\"list-module__table__u7447\",\"thead\":\"list-module__thead__VgQ3Y\",\"tr\":\"list-module__tr__WpJ8d\",\"td\":\"list-module__td__wRrzH\",\"th\":\"list-module__th__y7gsS\"};", "import type { ReactNode } from 'react';\n\nimport { Table, Checkbox } from '@mantine/core';\nimport cn from 'classnames';\n\nimport styles from './list-header.module.css';\n\ninterface IListHeaderProps\n{\n  selected?: boolean;\n  selection: string[];\n  total: number;\n  selectionActions: ReactNode;\n  onSelectAll: () => void;\n}\n\nexport\nfunction ListHeader(\n{ selected, selection, total, selectionActions, onSelectAll }: IListHeaderProps)\n{\n  return (\n    <Table.Thead>\n            <Table.Tr>\n                <Table.Th w=\"40px\">\n                    <Checkbox\n            checked={selected && selection.length === total}\n            indeterminate={selected && selection.length !== total}\n            onChange={onSelectAll} />\n\n                </Table.Th>\n\n                <Table.Th colSpan={5}>\n                    <div className={styles.container}>\n                        <span className={cn(styles.selected, selection && selection.length < 1 && styles.empty)}>\n                            {\n              selected &&\n              <>\n                                    {selection.length} selected\n                                </>}\n\n\n                        </span>\n\n                        <div className={styles.actions}>\n                            {selectionActions}\n                        </div>\n                    </div>\n                </Table.Th>\n            </Table.Tr>\n        </Table.Thead>);\n\n}", "export default {\"container\":\"list-header-module__container__OyLcf\",\"selected\":\"list-header-module__selected__BcIMD\",\"actions\":\"list-header-module__actions__7OG-U\"};", "import type { ISelection } from '~/shared/lib/hooks/useSelection'\nimport type { IListItem }  from '~/shared/ui-kit/List/types'\n\nimport { useState, useEffect, useMemo } from 'react'\n\nimport { useFolder }         from '~/services/folder/hooks/useFolder'\nimport { useSelection }      from '~/shared/lib/hooks/useSelection'\nimport { useFilesStoreData } from '~/shared/stores/files'\n\nimport { joinList } from './helpers'\n\ninterface IUseFilesListResult\n{\n    list: IListItem[]\n    selection: ISelection<string>\n}\n\nexport\nfunction useFilesList\n(): IUseFilesListResult\n{\n    const selection = useSelection<string>([])\n    const { set }   = selection\n\n    const { top }          = useFilesStoreData()\n    const { data: folder } = useFolder()\n\n    const [ list, $list ] = useState<IListItem[]>( joinList( top, folder ))\n\n    useEffect(() => {\n        $list( joinList( top, folder ))\n    }, [ top, folder ])\n\n    useEffect(() => {\n        set([])\n    }, [ folder, set ])\n\n    return useMemo(\n        () => ({\n            list,\n            selection\n        }),\n        [ list, selection ]\n    )\n}\n", "import { useCallback, useMemo, useState } from 'react'\n\nimport { filterUnique } from '../utils/arrays'\n\nexport\ninterface ISelection<T> {\n    selected: T[]\n    empty: boolean\n    onSelect: ( item: T | T[]) => void\n    isSelected: ( item: T ) => boolean\n    set: ( value: T[]) => void\n    reset: () => void\n}\n\nexport\nfunction useSelection\n<T>\n( initial: T[]): ISelection<T>\n{\n    const [ selected, $selected ] = useState<T[]>( initial )\n\n    const empty = useMemo(() => selected.length < 1, [ selected ])\n\n    const update = useCallback(\n        ( handler: ( list: T[]) => T[]) =>\n        {\n            $selected( handler([ ...selected ]))\n        },\n        [ selected ]\n    )\n\n    const exclude = useCallback(\n        ( value: T ) =>\n        {\n            update(( list: T[]) => {\n                list.splice( list.indexOf( value ), 1 )\n                return list\n            })\n        },\n        [ update ]\n    )\n\n    const include = useCallback(\n        ( value: T ) =>\n        {\n            update(( list: T[]) => {\n                list.push( value )\n                return list\n            })\n        },\n        [ update ]\n    )\n\n    const multiselect = useCallback(\n        ( value: T[]) =>\n        {\n            if ( selected.includes( value[ 0 ])) {\n                $selected( selected.filter( item => !value.includes( item )))\n            } else {\n                $selected([\n                    ...selected,\n                    ...value\n                ].filter( filterUnique ))\n            }\n        },\n        [ selected ]\n    )\n\n    const onSelect = useCallback(\n        ( value: T | T[]) =>\n        {\n            if ( Array.isArray( value )) {\n                multiselect( value )\n            } else {\n                selected.includes( value )\n                    ? exclude( value )\n                    : include( value )\n            }\n        },\n        [ selected, exclude, include, multiselect ]\n    )\n\n    const isSelected = useCallback(\n        ( id: T ) => !!selected?.includes( id ),\n        [ selected ]\n    )\n\n    const reset = useCallback(\n        () =>\n        {\n            $selected([])\n        },\n        []\n    )\n\n    return useMemo(\n        () => ({\n            selected,\n            empty,\n            onSelect,\n            isSelected,\n            reset,\n            set: $selected\n        }),\n        [ selected, empty, onSelect, isSelected, reset ]\n    )\n}\n", "export\nfunction filterUnique\n<T>\n( item: T, index: number, array: T[]): boolean\n{\n    return array.indexOf( item ) === index\n}\n", "import type { IFileInfo, IDirInfo, ITopPathInfo, IPathInfo } from '~/services/fs/types'\nimport type { IListItem }                                    from '~/shared/ui-kit/List/types'\n\nimport { IconFolderFilled, IconFolderUp } from '@tabler/icons-react'\n\nimport { DirActions }   from '~/segments/behavior/DirActions'\nimport { FileActions }  from '~/segments/behavior/FileActions'\nimport { FileInfo }     from '~/segments/elements/FileInfo'\nimport { FolderInfo }   from '~/segments/elements/FolderInfo'\nimport { relativePath } from '~/shared/lib/utils/path'\n\nfunction formatFiles\n( files?: IFileInfo[]): IListItem[]\n{\n    const res: IListItem[] = []\n\n    if ( files ) {\n        files.forEach( file => {\n            res.push({\n                key:     file.path,\n                path:    file.path,\n                text:    file.filename,\n                draft:   file.draft,\n                info:    <FileInfo data={file} />,\n                actions: <FileActions file={file} />\n            })\n        })\n    }\n\n    return res\n}\n\nfunction formatFolders\n( folders?: IDirInfo[], top?: ITopPathInfo, parent?: string ): IListItem[]\n{\n    const res: IListItem[] = []\n\n    if ( folders && top ) {\n        if ( parent ) {\n            res.push({\n                key:        parent,\n                path:       parent,\n                acceptDrop: true,\n                draft:      false,\n                text:       '..',\n                icon:       <IconFolderUp />,\n                link:       parent === top.path\n                    ? `/view/${top.hash}`\n                    : `/view/${top.hash}${relativePath( top, parent )}`\n            })\n        }\n\n        folders.forEach( folder => {\n            res.push({\n                key:        folder.path,\n                path:       folder.path,\n                acceptDrop: true,\n                draft:      folder.draft,\n                text:       folder.filename,\n                link:       `/view/${top.hash}/${folder.relative}`,\n                info:       <FolderInfo data={folder} />,\n                icon:       <IconFolderFilled />,\n                actions:    <DirActions dir={folder} />\n            })\n        })\n    }\n\n    return res\n}\n\nexport\nfunction joinList\n( top?: ITopPathInfo, data?: IPathInfo ): IListItem[]\n{\n    const res: IListItem[] = []\n\n    const folders = formatFolders( data?.folders, top, !( data as ITopPathInfo )?.hash ? ( data as IDirInfo )?.dir : undefined )\n    const files   = formatFiles( data?.files )\n\n    if ( folders.length > 0 ) {\n        res.push( ...folders )\n    }\n\n    if ( files.length > 0 ) {\n        res.push( ...files )\n    }\n\n    return res\n}\n", "import type { MantineSize }         from '@mantine/core'\nimport type { IDirInfo, IFileInfo } from '~/services/fs/types'\n\nimport { ActionIcon }  from '@mantine/core'\nimport { IconPencil }  from '@tabler/icons-react'\nimport { useCallback } from 'react'\n\nimport { useFolder } from '~/services/folder/hooks/useFolder'\n\ninterface IRenameButtonProps\n{\n    item: IFileInfo | IDirInfo\n    size?: MantineSize\n}\n\nexport\nfunction RenameButton\n({ item, size }: IRenameButtonProps )\n{\n    const { edit } = useFolder()\n\n    const rename = useCallback(\n        () => {\n            edit( item )\n        },\n        [ edit, item ]\n    )\n\n    return (\n        <>\n            <ActionIcon\n                size={ size ?? 'lg' }\n                variant='subtle'\n                onClick={rename}\n            >\n                <IconPencil size={20} />\n            </ActionIcon>\n        </>\n    )\n}\n", "import type { IDirInfo } from '~/services/fs/types'\n\nimport { RemoveButton } from '../RemoveButton'\nimport { RenameButton } from '../RenameButton'\n\ninterface IDirActionsProps\n{\n    dir: IDirInfo\n}\n\nexport\nfunction DirActions\n({ dir }: IDirActionsProps )\n{\n    return (\n        <>\n            <RenameButton item={dir} size=\"md\" />\n            <RemoveButton files={[ dir.path ]} size=\"md\" />\n        </>\n    )\n}\n", "import type { MantineSize } from '@mantine/core'\nimport type { IFileInfo }   from '~/services/fs/types'\n\nimport { ActionIcon }   from '@mantine/core'\nimport { IconDownload } from '@tabler/icons-react'\n\nimport { relativePath }      from '~/shared/lib/utils/path'\nimport { useFilesStoreData } from '~/shared/stores/files'\n\ninterface IDownloadButtonProps\n{\n    file: IFileInfo\n    size?: MantineSize\n}\n\nexport\nfunction DownloadButton\n({ file, size }: IDownloadButtonProps )\n{\n    const { top } = useFilesStoreData()\n\n    const download = () => {\n        if ( top ) {\n            window.open( `/api/download?hash=${top.hash}&file=${relativePath( top, file.path )}` )\n            // const a = document.createElement( 'a' )\n\n            // a.download = file.filename\n            // a.href     = `/api/download?hash=${top.hash}&file=${file.relative}`\n            // a.target   = '_blank'\n\n            // a.click()\n        }\n    }\n\n    return (\n        <>\n            <ActionIcon\n                size={ size ?? 'lg' }\n                variant='subtle'\n                onClick={download}\n            >\n                <IconDownload size={20} />\n            </ActionIcon>\n        </>\n    )\n}\n", "import type { IFileInfo } from '~/services/fs/types'\n\nimport { DownloadButton } from '../DownloadButton'\nimport { RemoveButton }   from '../RemoveButton'\nimport { RenameButton }   from '../RenameButton'\n\ninterface IFileActionsProps\n{\n    file: IFileInfo\n}\n\nexport\nfunction FileActions\n({ file }: IFileActionsProps )\n{\n    return (\n        <>\n            <RenameButton item={file} size=\"md\" />\n            <DownloadButton file={file} size=\"md\" />\n            <RemoveButton files={[ file.path ]} size=\"md\" />\n        </>\n    )\n}\n", "import type { ReactNode } from 'react'\n\ninterface IInfoProps\n{\n    prefix?: ReactNode\n    postfix?: ReactNode\n    text?: ReactNode\n    styles: Record<string, string>\n}\n\nexport\nfunction Info\n({ prefix, postfix, text, styles }: IInfoProps )\n{\n    return (\n        <li>\n            { prefix && ( <span className={styles.prefix}>{ prefix }</span> )}\n            <span className={styles.text}>{ text }</span>\n            { postfix && ( <span className={styles.postfix}>{ postfix }</span> )}\n        </li>\n    )\n}\n", "export default {\"container\":\"info-list-module__container__oPZRi\",\"prefix\":\"info-list-module__prefix__KJqnO\",\"postfix\":\"info-list-module__postfix__tk45f\"};", "import type { IInfoListItem } from './types';\n\nimport { Info } from '../Info';\n\nimport styles from './info-list.module.css';\n\nconst iconSize = 16;\n\ninterface IInfoListProps\n{\n  items: IInfoListItem[];\n}\n\nexport\nfunction InfoList(\n{ items }: IInfoListProps)\n{\n  return (\n    <ul className={styles.container}>\n            {\n      items.map((item) => {\n        if (!item) {\n          return null;\n        }\n\n        const Icon = item.icon;\n\n        return (\n          <Info\n            key={item.key}\n            postfix={Icon && <Icon size={iconSize} />}\n            styles={styles}\n            text={item.content} />);\n\n\n      })}\n\n        </ul>);\n\n}", "import type { IFileInfo }     from '~/services/fs/types'\nimport type { IInfoListItem } from '~/shared/ui-kit/InfoList/types'\n\nimport { filesize } from 'filesize'\n\nimport { FileType } from '~/shared/ui-kit/FileType'\n\nexport\nfunction formatItems\n( data: IFileInfo ): IInfoListItem[]\n{\n    const res: IInfoListItem[] = []\n\n    res.push({\n        key:     'size',\n        content: filesize( data.size )\n    })\n\n    res.push({\n        key:     'ext',\n        content: <FileType path={data.filename} />\n    })\n\n    return res\n}\n", "export default {\"container\":\"file-type-module__container__VZst4\"};", "import styles from './file-type.module.css';\n\ninterface IFileTypeProps\n{\n  path: string;\n}\n\nexport\nfunction FileType(\n{ path }: IFileTypeProps)\n{\n  const ext = path.split('.').pop();\n\n  if (!ext) {\n    return null;\n  }\n\n  return (\n    <span className={styles.container}>\n            {ext}\n        </span>);\n\n}", "import type { IFileInfo } from '~/services/fs/types'\n\nimport { InfoList } from '~/shared/ui-kit/InfoList'\n\nimport { formatItems } from './helpers'\n\ninterface IFileInfoProps\n{\n    data: IFileInfo\n}\n\nexport\nfunction FileInfo ({ data }: IFileInfoProps )\n{\n    return (\n        <InfoList items={formatItems( data )} />\n    )\n}\n", "import type { IPathInfo }     from '~/services/fs/types'\nimport type { IInfoListItem } from '~/shared/ui-kit/InfoList/types'\n\nimport { IconFileFilled, IconFolderFilled } from '@tabler/icons-react'\n\nexport\nfunction formatItems\n( data: IPathInfo ): IInfoListItem[]\n{\n    const res: IInfoListItem[] = []\n\n    res.push( data.folders.length > 0 && ({\n        key:     'folders',\n        icon:    IconFolderFilled,\n        content: data.folders.length\n    }))\n\n    res.push( data.files.length > 0 && ({\n        key:     'files',\n        icon:    IconFileFilled,\n        content: data.files.length\n    }))\n\n    return res\n}\n", "import type { IPathInfo } from '~/services/fs/types'\n\nimport { InfoList } from '~/shared/ui-kit/InfoList'\n\nimport { formatItems } from './helpers'\n\ninterface IFolderInfoProps\n{\n    data: IPathInfo\n}\n\nexport\nfunction FolderInfo ({ data }: IFolderInfoProps )\n{\n    return (\n        <InfoList items={formatItems( data )} />\n    )\n}\n", "import { SelectionActions }  from '~/segments/behavior/SelectionActions'\nimport { FileRow }           from '~/segments/elements/FileRow'\nimport { useFilesHandlers }  from '~/services/folder/hooks/useFilesHandlers'\nimport { useFilesStoreData } from '~/shared/stores/files'\nimport { List }              from '~/shared/ui-kit/List'\n\nimport { useFilesList } from './hooks/useFilesList'\n\nexport\nfunction FilesList\n()\n{\n    const { list, selection } = useFilesList()\n    const { locked }          = useFilesStoreData()\n    const handlers            = useFilesHandlers()\n\n    return (\n        <List\n            component={FileRow}\n            data={list}\n            selection={selection}\n            selectionActions={<SelectionActions selection={selection} />}\n            config={{\n                draggable:  true,\n                selectable: true,\n                locked\n            }}\n            onChange={handlers.rename}\n            onDrop={handlers.move}\n        />\n    )\n}\n", "import { FilesList } from '~/segments/appearance/FilesList'\n\nexport\nfunction FilesListScreen\n()\n{\n    return (\n        <div>\n            <FilesList />\n        </div>\n    )\n}\n", "import { FilesListScreen } from '~/screens/FilesList'\nimport { useFolder }       from '~/services/folder/hooks/useFolder'\n\nexport\nfunction ViewFilesFlow\n()\n{\n    const { data } = useFolder()\n\n    return data\n        ? (\n            <FilesListScreen />\n        )\n        : null\n}\n", "import type { IListItem } from '~/shared/ui-kit/List/types'\n\nimport { useState, useEffect, useMemo } from 'react'\n\nimport { useFilesStoreData } from '~/shared/stores/files'\n\nimport { formatList } from './helpers'\n\ninterface IUsePathListResult\n{\n    list: IListItem[]\n}\n\nexport\nfunction usePathList\n(): IUsePathListResult\n{\n    const { paths } = useFilesStoreData()\n\n    const [ list, $list ] = useState<IListItem[]>( formatList( paths ))\n\n    useEffect(() => {\n        $list( formatList( paths ))\n    }, [ paths ])\n\n    return useMemo(() => ({ list }), [ list ])\n}\n", "import type { ITopPathInfo } from '~/services/fs/types'\nimport type { IListItem }    from '~/shared/ui-kit/List/types'\n\nimport { FolderInfo } from '~/segments/elements/FolderInfo'\n\nexport\nfunction formatList\n( paths?: ITopPathInfo[]): IListItem[]\n{\n    const res: IListItem[] = []\n\n    if ( paths ) {\n        paths.forEach( path => {\n            res.push({\n                key:  path.hash,\n                text: `${path.path}`,\n                link: `/view/${path.hash}`,\n                info: <FolderInfo data={path} />\n            })\n        })\n    }\n\n    return res\n}\n", "import { FileRow } from '~/segments/elements/FileRow'\nimport { List }    from '~/shared/ui-kit/List'\n\nimport { usePathList } from './hooks'\n\nexport\nfunction PathList\n()\n{\n    const { list } = usePathList()\n\n    return (\n        <List\n            component={FileRow}\n            config={{ showIcons: false }}\n            data={list}\n        />\n    )\n}\n", "import { PathList } from '~/segments/appearance/PathList'\n\nexport\nfunction PathListScreen\n()\n{\n    // TODO: WTF div\n\n    return (\n        <div>\n            <PathList />\n        </div>\n    )\n}\n", "import type { PropsWithChildren, ReactNode } from 'react'\n\nimport { AppShell } from '@mantine/core'\n\nimport { AppHeader } from '~/segments/appearance/AppHeader'\n\ninterface IPageLayoutProps\n    extends PropsWithChildren\n{\n    headerActions?: ReactNode\n}\n\nexport\nfunction PageLayout\n({ headerActions, children }: IPageLayoutProps )\n{\n    return (\n        <AppShell>\n            <AppHeader actions={headerActions} />\n\n            <AppShell.Main>\n                { children }\n            </AppShell.Main>\n        </AppShell>\n    )\n}\n", "import { Breadcrumbs as MBreadcrumbs, Anchor } from '@mantine/core';\nimport { Link } from '@remix-run/react';\n\nimport styles from './Breadcrumbs.module.css';\nimport { useBreadcrumbs } from './hooks';\n\nexport\nfunction Breadcrumbs()\n\n{\n  const { visible, path, active } = useBreadcrumbs();\n\n  return visible ?\n\n  <MBreadcrumbs classNames={styles}>\n                {\n    path.map((b) =>\n    <Anchor key={b.link} component={Link} to={b.link}>\n                            {b.text}\n                        </Anchor>\n    )}\n\n\n                <Anchor c=\"primary.0\" underline='never'>\n                    {active}\n                </Anchor>\n            </MBreadcrumbs> :\n\n  null;\n}", "export default {\"separator\":\"Breadcrumbs-module__separator__7DbBF\",\"breadcrumb\":\"Breadcrumbs-module__breadcrumb__B4n0u\"};", "import type { IBreadcrumb } from './types'\n\nimport { useState, useEffect, useMemo } from 'react'\n\nimport { useFilesStoreData } from '~/shared/stores/files'\n\nimport { extractActive, extractParents } from './helpers'\n\ninterface IUseBreadcrumbsResult\n{\n    visible: boolean\n    active: string\n    path: IBreadcrumb[]\n}\n\nexport\nfunction useBreadcrumbs\n(): IUseBreadcrumbsResult\n{\n    const { folder, top } = useFilesStoreData()\n\n    const [ active, $active ] = useState<string>( extractActive( folder, top ))\n    const [ path, $path ]     = useState<IBreadcrumb[]>( extractParents( top, folder ))\n\n    const visible = useMemo(() => !!top, [ top ])\n\n    useEffect(() => {\n        $active( extractActive( folder, top ))\n        $path( extractParents( top, folder ))\n    }, [ top, folder ])\n\n    return useMemo(() => ({\n        visible,\n        active,\n        path\n    }), [ active, path, visible ])\n}\n", "export const crumbPlaceholder = '...'\n", "import type { IBreadcrumb }                       from './types'\nimport type { IPathInfo, ITopPathInfo, IDirInfo } from '~/services/fs/types'\n\nimport { crumbPlaceholder } from './consts'\n\nfunction extractHomeText\n( parent?: IPathInfo ): string\n{\n    return parent?.path.split( '/' ).pop() ?? ''\n}\n\nfunction extractHome\n( parent: ITopPathInfo ): IBreadcrumb\n{\n    return {\n        link: `/view/${parent.hash}`,\n        text: extractHomeText( parent ) ?? crumbPlaceholder\n    }\n}\n\nexport\nfunction extractActive\n( folder?: IPathInfo, top?: ITopPathInfo ): string\n{\n    return ( folder as IDirInfo )?.filename ?? extractHomeText( top ) ?? crumbPlaceholder\n}\n\nexport\nfunction extractParents\n( parent?: ITopPathInfo, path?: IPathInfo ): IBreadcrumb[]\n{\n    if ( !parent || !path ) {\n        return []\n    }\n\n    const res: IBreadcrumb[] = []\n\n    const home  = extractHome( parent )\n    const parts = path.relative.split( '/' )\n\n    for ( let i = 1; i < parts.length; i++ ) {\n        res.push({\n            link: `${home.link}/${parts.slice( 0, i ).join( '/' )}`,\n            text: parts[ i - 1 ] ?? crumbPlaceholder\n        })\n    }\n\n    return [ home, ...res ]\n}\n", "import type { ReactNode, PropsWithChildren } from 'react';\n\nimport { AppShell, Box, Group } from '@mantine/core';\n\nimport styles from './app-header.module.css';\n\ninterface IAppHeaderViewProps extends\n  PropsWithChildren\n{\n  actions?: ReactNode;\n}\nexport\nfunction AppHeaderView(\n{ children, actions }: IAppHeaderViewProps)\n{\n  return (\n    <AppShell.Header className={styles.header}>\n            <Box bg=\"primary.8\">\n                <Group h=\"60px\" px=\"md\">\n                    {children}\n\n                    <Group ml=\"auto\">\n                        {actions}\n                    </Group>\n                </Group>\n            </Box>\n        </AppShell.Header>);\n\n}", "export default {\"header\":\"app-header-module__header__rJESL\"};", "import { Anchor } from '@mantine/core'\nimport { Link }   from '@remix-run/react'\n\nimport { Logo } from '../Logo'\n\ninterface ILinkLogoProps\n{\n    to: string\n}\n\nexport\nfunction LinkLogo\n({ to }: ILinkLogoProps )\n{\n    return (\n\n        <Anchor\n            c=\"primary.4\"\n            component={Link}\n            h=\"30px\"\n            lh=\"30px\"\n            to={to}\n        >\n            <Logo />\n        </Anchor>\n    )\n}\n", "export\nfunction Logo\n()\n{\n    return (\n        <svg\n            fill=\"none\"\n            height=\"30\"\n            viewBox=\"0 0 1236 861\"\n            width=\"43\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                clipRule=\"evenodd\"\n                d=\"M841.7 150.347c58.936-24.994 126.634-30.288 192.71-10.322 149.92 45.303 234.71 203.494 189.38 353.331-33.73 111.498-129.94 186.862-238.681 199.561-57.22 128.709-202.729 197.696-341.115 155.879a285.391 285.391 0 0 1-40.637-15.743c-34.28 13.779-73.388 16.468-111.561 4.933-58.934-17.809-100.926-64.984-114.789-120.654-54.691 19.102-115.716 21.683-175.415 3.643C51.672 675.672-33.117 517.481 12.211 367.644c33.73-111.497 129.936-186.862 238.68-199.561C308.112 39.373 453.62-29.613 592.006 12.204a284.848 284.848 0 0 1 50.417 20.656c27.59-6.295 57.174-5.735 86.155 3.023C785.315 53.028 826.35 97.39 841.7 150.347Z\"\n                fill=\"none\"\n                fillRule=\"evenodd\"\n            />\n\n            <path\n                clipRule=\"evenodd\"\n                d=\"M841.7 150.347c58.936-24.994 126.634-30.288 192.71-10.322 149.92 45.303 234.71 203.494 189.38 353.331-33.73 111.498-129.94 186.862-238.681 199.561-57.221 128.709-202.729 197.696-341.115 155.879a285.391 285.391 0 0 1-40.637-15.743c-34.28 13.779-73.388 16.468-111.561 4.933-58.934-17.809-100.926-64.984-114.789-120.654-54.691 19.102-115.716 21.683-175.415 3.643C51.672 675.672-33.117 517.481 12.211 367.644c33.73-111.497 129.936-186.862 238.68-199.561C308.112 39.373 453.62-29.613 592.006 12.204a284.848 284.848 0 0 1 50.417 20.656c27.59-6.295 57.174-5.735 86.154 3.023C785.315 53.028 826.35 97.39 841.7 150.347ZM738.148 292.981l-10.577-19.733-49.502 26.502 56.252 104.95.028-.015 2.655 4.954 105.008-56.22-26.517-49.474-22.836 12.226c41.64-65.635 123.329-98.347 201.398-74.756 93.903 28.374 147.003 127.454 118.613 221.301-22.1 73.069-87.09 121.422-159.108 125.859a236.615 236.615 0 0 1-9.347 48.877 240.002 240.002 0 0 1-3.151 9.67c.501.004-.5 0 0 0-37.874 117.762-161.876 183.892-280.818 147.95-20.299-6.133-39.109-14.848-56.179-25.674-27.119 18.559-62.109 25.111-96.019 14.864-43.114-13.028-72.627-49.631-78.685-91.422-2.285-15.761-1.233-32.26 3.683-48.511a113.666 113.666 0 0 1 1.894-5.712c22.592-17.165 42.218-38.487 57.575-63.267a113.09 113.09 0 0 1 5.829-2.561l8.769 16.361 49.502-26.502-56.252-104.95-.029.015-2.651-4.946-105.009 56.22 26.518 49.474 22.836-12.226c-41.641 65.635-123.329 98.347-201.398 74.756-93.9-28.374-147.005-127.454-118.615-221.301 22.104-73.069 87.095-121.422 159.11-125.859 1.355-16.262 4.431-32.628 9.347-48.877a238.962 238.962 0 0 1 3.15-9.67C330.945 96.642 456.339 29.843 575.754 65.928c21.722 6.563 41.739 16.082 59.743 27.983 23.46-10.085 50.47-12.27 76.828-4.305 42.239 12.764 71.423 48.153 78.287 88.881 2.785 16.523 1.897 33.926-3.284 51.052a114.683 114.683 0 0 1-2.069 6.194 234.335 234.335 0 0 0-46.379 56.8c-.244.15-.488.3-.732.448Z\"\n                fill=\"currentColor\"\n                fillRule=\"evenodd\"\n            />\n        </svg>\n    )\n}\n", "import type { ReactNode } from 'react'\n\nimport { Breadcrumbs }   from '~/segments/behavior/Breadcrumbs'\nimport { AppHeaderView } from '~/shared/ui-kit/AppHeaderView'\nimport { LinkLogo }      from '~/shared/ui-kit/LinkLogo'\n\ninterface IAppHeaderProps\n{\n    actions?: ReactNode\n}\n\nexport\nfunction AppHeader\n({ actions }: IAppHeaderProps )\n{\n    return (\n        <AppHeaderView actions={actions}>\n            <LinkLogo to=\"/\" />\n            <Breadcrumbs />\n        </AppHeaderView>\n    )\n}\n", "import { ActionIcon }          from '@mantine/core'\nimport { IconFolderFilled }    from '@tabler/icons-react'\nimport { useEffect, useState } from 'react'\n\nimport { useFolder } from '~/services/folder/hooks/useFolder'\n\nimport { Uploader } from '../Uploader'\n\nexport\nfunction FolderActions\n()\n{\n    const { data, create }      = useFolder()\n    const [ visible, $visible ] = useState<boolean>( false )\n\n    useEffect(() => {\n        $visible( true )\n    }, [])\n\n    if ( !visible || !data ) {\n        return null\n    }\n\n    return (\n        <>\n            <Uploader />\n\n            <ActionIcon c=\"primary.0\" size=\"lg\" onClick={create}>\n                <IconFolderFilled size=\"20\" />\n            </ActionIcon>\n        </>\n    )\n}\n", "import { Dropzone } from '@mantine/dropzone';\nimport { useContext, useRef } from 'react';\n\nimport { ConfigContext } from '~/services/config/context';\n\nimport { AcceptContent } from './components/AcceptContent';\nimport { RejectContent } from './components/RejectContent';\nimport { UploadIcon } from './components/UploadIcon';\nimport { useSmartUpload } from './hooks/useSmartUpload';\nimport styles from './uploader.module.css';\n\nexport\nfunction Uploader()\n\n{\n  const openRef = useRef<() => void>(null);\n\n  const { accept } = useContext(ConfigContext) ?? { accept: ['*'] };\n  const { upload } = useSmartUpload();\n\n  return (\n    <>\n            <Dropzone.FullScreen\n        active\n        accept={accept}\n        className={styles.root}\n        openRef={openRef}\n        onDrop={upload}>\n\n                <Dropzone.Accept>\n                    <AcceptContent />\n                </Dropzone.Accept>\n\n                <Dropzone.Reject>\n                    <RejectContent />\n                </Dropzone.Reject>\n            </Dropzone.FullScreen>\n\n            <UploadIcon onClick={() => openRef.current?.()} />\n        </>);\n\n}", "import type { IConfig } from '.'\n\nimport { createContext } from 'react'\n\nconst ConfigContext  = createContext<IConfig | undefined>( undefined )\nconst ConfigProvider = ConfigContext.Provider\n\nexport { ConfigContext, ConfigProvider }\n", "import type { ReactNode } from 'react'\n\nimport { rem }        from '@mantine/core'\nimport { IconUpload } from '@tabler/icons-react'\n\nexport\nfunction AcceptContent\n(): ReactNode\n{\n    return (\n        <IconUpload\n            stroke={1.5}\n            style={{\n                width:  rem( 52 ),\n                height: rem( 52 ),\n                color:  'var(--mantine-color-blue-6)'\n            }}\n        />\n    )\n}\n", "import type { ReactNode } from 'react'\n\nimport { Group, Text, rem } from '@mantine/core'\nimport { IconX }            from '@tabler/icons-react'\n\nexport\nfunction RejectContent\n(): ReactNode\n{\n    return (\n\n        <Group\n            gap=\"xl\"\n            justify=\"center\"\n            mih={220}\n            style={{ pointerEvents: 'none' }}\n        >\n            <IconX\n                stroke={1.5}\n                style={{\n                    width:  rem( 52 ),\n                    height: rem( 52 ),\n                    color:  'var(--mantine-color-red-6)'\n                }}\n            />\n\n            <Text inline size=\"xl\">\n                {'Unsupported file format'}\n            </Text>\n        </Group>\n    )\n}\n", "import type { ReactNode } from 'react'\n\nimport { ActionIcon } from '@mantine/core'\nimport { IconUpload } from '@tabler/icons-react'\n\nexport\nfunction UploadIcon\n({ onClick }: { onClick: () => void }): ReactNode\n{\n    return (\n        <ActionIcon c=\"primary.0\" size=\"lg\" onClick={onClick}>\n            <IconUpload size=\"20\" />\n        </ActionIcon>\n    )\n}\n", "import type { FileWithPath } from '@mantine/dropzone'\n\nimport { useCallback, useContext, useMemo } from 'react'\n\nimport { DEFAULT_MAX_SIZE } from '~/services/config/consts'\nimport { ConfigContext }    from '~/services/config/context'\nimport { useFilesHandlers } from '~/services/folder/hooks/useFilesHandlers'\nimport { useFolder }        from '~/services/folder/hooks/useFolder'\n\nimport { getFilesIntersection } from '../helpers'\n\nimport { useOverweightConfirmation } from './useOverweightConfirmation'\nimport { useOverwriteConfirmation }  from './useOverwriteConfirmation'\n\ninterface IUseSmartUploadResult\n{\n    upload: ( files: FileWithPath[]) => void\n}\n\nexport\nfunction useSmartUpload\n(): IUseSmartUploadResult\n{\n    const config = useContext( ConfigContext )\n\n    const { data: folder }                                   = useFolder()\n    const { upload }                                         = useFilesHandlers()\n    const { confirm: confirmOverwrite, hide: hideOverwrite } = useOverwriteConfirmation()\n    const { confirm: confirmOverweight }                     = useOverweightConfirmation()\n\n    const uploadAll = useCallback(\n        ( files: File[]) => () => {\n            void upload( files, folder?.path ?? '' )\n            hideOverwrite()\n        },\n        [ folder, hideOverwrite, upload ]\n    )\n\n    const uploadNonExist = useCallback(\n        ( files: File[], intersection: File[]) => () => {\n            const clean = files.filter( f => !intersection.includes( f ))\n\n            if ( clean.length > 0 ) {\n                void upload( clean, folder?.path ?? '' )\n            }\n\n            hideOverwrite()\n        },\n        [ folder, upload, hideOverwrite ]\n    )\n\n    const confirmUpload = useCallback(\n        ( files: FileWithPath[], intersection: File[]) => {\n            const rest = files.filter( f => !intersection.includes( f ))\n\n            confirmOverwrite(\n                intersection,\n                rest,\n                uploadAll( files ),\n                uploadNonExist( files, intersection )\n            )\n        },\n        [ confirmOverwrite, uploadAll, uploadNonExist ]\n    )\n\n    const checkOverwrite = useCallback(\n        ( files: FileWithPath[]) => {\n            const intersect = getFilesIntersection( files, folder?.files ?? [])\n\n            ;( intersect.length > 0 )\n                ? confirmUpload( files, intersect )\n                : void upload( files, folder?.path ?? '' )\n        },\n        [ confirmUpload, upload, folder ]\n    )\n\n    const checkSizes = useCallback(\n        ( files: FileWithPath[], success: ( filtered: File[]) => void ) => {\n            const overweight = files.filter( f => f.size > ( config?.maxsize ?? DEFAULT_MAX_SIZE ))\n            const filtered   = files.filter( f => !overweight.includes( f ))\n            const max        = overweight.reduce(( m, f ) => Math.max( m, f.size ), -Infinity )\n\n            if ( overweight.length > 0 ) {\n                confirmOverweight(\n                    overweight,\n                    filtered,\n                    max,\n                    () => {\n                        success( filtered )\n                    }\n                )\n            } else {\n                success( filtered )\n            }\n        },\n        []\n    )\n\n    const handleUpload = useCallback(\n        ( files: FileWithPath[]) => {\n            if ( folder?.path ) {\n                checkSizes( files, ( filtered: File[]) => {\n                    checkOverwrite( filtered )\n                })\n            }\n        },\n        [ folder, checkSizes, checkOverwrite ]\n    )\n\n    return useMemo(() => ({ upload: handleUpload }), [ handleUpload ])\n}\n", "import type { FileWithPath } from '@mantine/dropzone'\nimport type { IFileInfo }    from '~/services/fs/types'\n\nexport\nfunction getFilesIntersection\n( upload: FileWithPath[], check: IFileInfo[]): FileWithPath[]\n{\n    return upload.filter( f => check.find( cf => cf.filename === f.name ))\n}\n", "import type { ReactNode } from 'react'\n\nimport { Button, Divider }      from '@mantine/core'\nimport { filesize }             from 'filesize'\nimport { useCallback, useMemo } from 'react'\n\nimport { useConfirmationPopup } from '~/shared/popups/Confirmation'\n\ninterface IOverwritePayload\n{\n    overweight: File[]\n    other: File[] | undefined\n    max: number\n    onUpload: () => void\n}\n\nfunction OverweightContent\n({ overweight, other, max }: Pick<IOverwritePayload, 'overweight' | 'other' | 'max'> ): ReactNode\n{\n    return (\n        <>\n            {\n                overweight.length > 1\n                    ? (\n                        <p>You have { overweight.length } file(s) that are too big (up to {filesize( max )}).</p>\n                    )\n                    : (\n                        <p>This file is too big ({filesize( overweight[ 0 ].size )}).</p>\n                    )\n            }\n\n            {\n                other && other.length > 0 && (\n                    <p>You can upload the remaining {other.length} file(s) or cancel upload.</p>\n                )\n            }\n\n            <Divider />\n            <p><i><small>If you want to upload big files, please update &quot;maxsize&quot; value in your config.json and restart nanomoln.</small></i></p>\n        </>\n    )\n}\n\nfunction OverweightButtons\n({ other, onUpload }: Pick<IOverwritePayload, 'other' | 'onUpload'> ): ReactNode\n{\n    const { hide } = useConfirmationPopup()\n\n    return (\n        <>\n            <Button style={ other && other.length > 0 ? { marginRight: 'auto' } : {}} variant=\"subtle\" onClick={hide}>\n                Cancel upload\n            </Button>\n\n            {\n                ( other && other.length > 0 ) && (\n                    <Button onClick={onUpload}>\n                        Upload {other.length} files\n                    </Button>\n                )\n            }\n        </>\n    )\n}\n\ninterface IOverwriteResult\n{\n    confirm: ( overweight: File[] | undefined, other: File[] | undefined, max: number, onUpload: () => void ) => void\n    hide: () => void\n}\n\nexport\nfunction useOverweightConfirmation\n(): IOverwriteResult\n{\n    const { show, hide } = useConfirmationPopup()\n\n    const confirm = useCallback(\n        ( overweight: File[] | undefined, other: File[] | undefined, max: number, onUpload: () => void ) =>\n        {\n            if ( overweight && overweight.length > 0 ) {\n                show(\n                    'Allowed upload size exceeded',\n                    <OverweightContent max={max} other={other} overweight={overweight} />,\n                    <OverweightButtons other={other} onUpload={onUpload} />\n\n                )\n            } else {\n                console.error( 'Trying to show empty overweight confirmation' )\n            }\n        }, [ show ])\n\n    return useMemo(\n        () => ({\n            confirm,\n            hide\n        }),\n        [ confirm, hide ]\n    )\n}\n", "import type { ReactNode } from 'react';\n\nimport { Button } from '@mantine/core';\nimport { useCallback, useMemo } from 'react';\n\nimport { useConfirmationPopup } from '~/shared/popups/Confirmation';\n\nimport styles from './upload-list.module.css';\n\nconst maxFilesShowing = 10;\n\ninterface IOverwritePayload\n{\n  intersection: File[];\n  rest?: File[];\n  onOverwrite: () => void;\n  onIgnore: () => void;\n}\n\nfunction OverwriteContent(\n{ intersection }: Pick<IOverwritePayload, 'intersection'>): ReactNode\n{\n  const cut = intersection.length > maxFilesShowing ? intersection.slice(0, maxFilesShowing) : intersection;\n\n  return (\n    <>\n            <p>This files will be overwritten:</p>\n\n            <ul className={styles.list}>\n                {\n        cut.map((file) =>\n        <li key={file.name} className={styles.item} title={file.name}>\n                            <span className={styles.wrapper}>\n                                {file.name}\n                            </span>\n                        </li>\n        )}\n\n            </ul>\n\n            {\n      cut.length < intersection.length &&\n      <p><strong>And {intersection.length - cut.length} more</strong></p>}\n\n\n        </>);\n\n}\n\nfunction OverwriteButtons(\n{ intersection, rest, onOverwrite, onIgnore }: IOverwritePayload): ReactNode\n{\n  const { hide } = useConfirmationPopup();\n\n  return (\n    <>\n            <Button style={{ marginRight: 'auto' }} variant=\"subtle\" onClick={hide}>\n                Cancel upload\n            </Button>\n\n            <Button color=\"red\" onClick={onOverwrite}>\n                {\n        intersection.length > 1 ?\n        'Overwrite all' :\n        'Overwrite'}\n\n            </Button>\n\n            {\n      intersection.length > 1 && rest && rest.length > 0 &&\n      <Button onClick={onIgnore}>\n                        Ignore exist\n                    </Button>}\n\n\n        </>);\n\n}\n\ninterface IOverwriteResult\n{\n  confirm: (intersection: File[] | undefined, rest: File[] | undefined, onOverwrite: () => void, onIgnore: () => void) => void;\n  hide: () => void;\n}\n\nexport\nfunction useOverwriteConfirmation()\n: IOverwriteResult\n{\n  const { show, hide } = useConfirmationPopup();\n\n  const confirm = useCallback(\n    (intersection: File[] | undefined, rest: File[] | undefined, onOverwrite: () => void, onIgnore: () => void) =>\n    {\n      if (intersection && intersection.length > 0) {\n        show(\n          'Files already exist',\n          <OverwriteContent intersection={intersection} />,\n          <OverwriteButtons\n            intersection={intersection}\n            rest={rest}\n            onIgnore={onIgnore}\n            onOverwrite={onOverwrite} />\n\n        );\n      } else {\n        console.error('Trying to show empty overwrite confirmation');\n      }\n    },\n    [show]\n  );\n\n  return useMemo(\n    () => ({\n      confirm,\n      hide\n    }),\n    [confirm, hide]\n  );\n}", "export default {\"list\":\"upload-list-module__list__P7AHk\",\"item\":\"upload-list-module__item__y9DC4\",\"wrapper\":\"upload-list-module__wrapper__etJE2\"};", "export default {\"root\":\"uploader-module__root__cr9-2\"};", "import { ViewFilesFlow }  from '~/flows/ViewFiles'\nimport { PathListScreen } from '~/screens/PathList'\nimport { PageLayout }     from '~/segments/appearance/PageLayout'\nimport { FolderActions }  from '~/segments/behavior/FolderActions'\nimport { useFolder }      from '~/services/folder/hooks/useFolder'\n\nexport\nfunction MainFlow\n()\n{\n    const { data } = useFolder()\n\n    return (\n        <PageLayout\n            headerActions={(\n                <FolderActions />\n            )}\n        >\n            {\n                ( data )\n                    ? <ViewFilesFlow />\n                    : <PathListScreen />\n            }\n        </PageLayout>\n    )\n}\n", "import type {  MetaFunction } from '@remix-run/node'\n\nexport\nfunction meta\n(): ReturnType<MetaFunction>\n{\n    return [\n        { title: 'nanomoln' },\n        {\n            name:    'description',\n            content: 'Simple files manipulation'\n        }\n    ]\n}\n", "import type { loader }   from './loader'\nimport type {  IConfig } from '~/services/config'\n\nimport { useLoaderData }      from '@remix-run/react'\nimport { useEffect, useMemo } from 'react'\n\nimport { useFilesStoreActions } from '~/shared/stores/files'\n\ninterface IUseFolderDataResult\n{\n    loaded: boolean\n    config: IConfig\n}\n\nexport\nfunction useFolderData\n(): IUseFolderDataResult\n{\n    const { data, config } = useLoaderData<typeof loader>()\n    const { force }        = useFilesStoreActions()\n\n    useEffect(() => {\n        force( data )\n    }, [ data, force ])\n\n    return useMemo(\n        () => ({\n            config,\n            loaded: !!( data.paths && data.top )\n        }),\n        [ data, config ]\n    )\n}\n", "import type { IConfig } from '.'\n\nimport { configService } from '.'\n\nexport\ninterface IWithConfig\n{\n    config: IConfig\n}\n\nexport\nfunction withConfig\n<T>\n( object: T ): T & IWithConfig\n{\n    const config = configService.get()\n\n    return {\n        ...object,\n        config\n    }\n}\n", "import type { Params }          from '@remix-run/react'\nimport type { ITopPathInfo }    from '~/services/fs/types'\nimport type { IFilesStoreData } from '~/shared/stores/files'\n\nimport { configService } from '~/services/config'\nimport { fsService }     from '~/services/fs/service'\n\nexport\nfunction getPaths\n( params: Params ): { paths: ITopPathInfo[], target?: ITopPathInfo }\n{\n    const paths  = fsService.path.infoList( configService.getPaths())\n    const target = paths.find( info => info.hash === params.path )\n\n    return {\n        paths,\n        target\n    }\n}\n\nexport\nasync function loadSubfolder\n( top: ITopPathInfo, paths: ITopPathInfo[], subfolder: string ): Promise<IFilesStoreData>\n{\n    const res: IFilesStoreData = {\n        top,\n        paths,\n        locked:    [],\n        temporary: []\n    }\n\n    const sub = fsService.dir.find( top, subfolder )\n\n    if ( sub ) {\n        res.folder = fsService.dir.extendDeep<typeof sub>( fsService.dir.extend( top.path, sub ), top.path )\n    }\n\n    return res\n}\n\nexport\nasync function getFolderInfo\n( paths: ITopPathInfo[], target: ITopPathInfo, subfolder?: string ): Promise<IFilesStoreData>\n{\n    const top = fsService.dir.extendDeep( target )\n\n    if ( subfolder ) {\n        return await loadSubfolder( top, paths, subfolder )\n    }\n\n    return {\n        top,\n        paths,\n        locked:    [],\n        temporary: []\n    }\n}\n", "import type { LoaderFunctionArgs } from '@remix-run/node'\nimport type { IWithConfig }        from '~/services/config/helpers'\nimport type { IFilesStoreData }    from '~/shared/stores/files'\n\nimport { withConfig } from '~/services/config/helpers'\n\nimport { getFolderInfo, getPaths } from './helpers'\n\ninterface IFolderData\n{\n    data: IFilesStoreData\n}\n\nexport\nasync function loader\n({ params }: LoaderFunctionArgs ): Promise<IFolderData & IWithConfig>\n{\n    const { paths, target } = getPaths( params )\n\n    if ( !target ) {\n        console.log( 'NOT FOUND' )\n        // TODO: 404\n        return withConfig<IFolderData>({\n            data: {\n                locked:    [],\n                temporary: []\n            }\n        })\n    }\n\n    return withConfig<IFolderData>({ data: await getFolderInfo( paths, target, params[ '*' ]) })\n}\n", "import { MainFlow }       from '~/flows/Main'\nimport { ConfigProvider } from '~/services/config/context'\nimport { meta }           from '~/shared/lib/default-meta'\n\nimport { useFolderData } from './hooks'\nimport { loader }        from './loader'\n\nexport { loader, meta }\n\nexport\nfunction FolderPage\n()\n{\n    const { loaded, config } = useFolderData()\n\n    return loaded\n        ? (\n            <ConfigProvider value={config}>\n                <MainFlow />\n            </ConfigProvider>\n        )\n        : null\n}\n", "import { HomePage, loader, meta } from '~/entrypoints/Home'\n\nexport { loader, meta }\n\nexport default HomePage\n", "import type { loader }      from './loader'\nimport type { IWithConfig } from '~/services/config/helpers'\n\nimport {  useLoaderData }     from '@remix-run/react'\nimport { useEffect, useMemo } from 'react'\n\nimport { useFilesStoreActions } from '~/shared/stores/files'\n\nexport\nfunction useInitialData\n(): IWithConfig\n{\n    const { data, config } = useLoaderData<typeof loader>()\n    const { force }        = useFilesStoreActions()\n\n    useEffect(() => {\n        force( data )\n    }, [ data, force ])\n\n    return useMemo(() => ({ config }), [ config ])\n}\n", "import type { TypedResponse } from '@remix-run/node'\nimport type { IWithConfig }   from '~/services/config/helpers'\nimport type { ITopPathInfo }  from '~/services/fs/types'\n\nimport { redirect } from '@remix-run/node'\n\nimport { configService } from '~/services/config'\nimport { withConfig }    from '~/services/config/helpers'\nimport { fsService }     from '~/services/fs/service'\n\ninterface IHomePageData\n{\n    data: {\n        paths: ITopPathInfo[]\n    }\n}\n\nexport\nasync function loader\n(): Promise<IHomePageData & IWithConfig | TypedResponse<never>>\n{\n    const paths = fsService.path.infoList( configService.getPaths())\n\n    if ( paths.length === 1 ) {\n        return redirect( `/view/${paths[ 0 ].hash}` )\n    }\n\n    return withConfig<IHomePageData>({ data: { paths } })\n}\n", "import { MainFlow }       from '~/flows/Main'\nimport { ConfigProvider } from '~/services/config/context'\nimport { meta }           from '~/shared/lib/default-meta'\n\nimport { useInitialData } from './hooks'\nimport { loader }         from './loader'\n\nexport { loader, meta }\n\nexport\nfunction HomePage\n()\n{\n    const { config } = useInitialData()\n\n    return (\n        <ConfigProvider value={config}>\n            <MainFlow />\n        </ConfigProvider>\n    )\n}\n", "export { action } from '~/entrypoints/Api'\n", "export\ninterface IErrorProps {\n    error: string\n}\n\nexport\nfunction generateErrorProps\n( text: string ): IErrorProps\n{\n    return { error: text }\n}\n", "// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TServerApiHandler = ( payload: any, query: URLSearchParams ) => unknown\ntype TServerApiHandlers = Record<string, TServerApiHandler>\n\ninterface IApiPayload {\n    action?: string\n    request: Request\n    query: URLSearchParams\n}\n\nexport\nfunction generateServerApi\n( handlers: TServerApiHandlers, defaultHandler: TServerApiHandler )\n{\n    return (\n        async ({ action, request, query }: IApiPayload ): Promise<unknown> => {\n            const payload = request.headers.get( 'content-type' )?.includes( 'multipart/form-data' )\n                ? request\n                : await request.json()\n\n            if ( !action || !handlers[ action ]) {\n                return defaultHandler( payload, query )\n            }\n\n            return handlers[ action ]( payload, query )\n        }\n    )\n}\n", "import { fsService } from '~/services/fs/service'\n\ninterface IFolderCreatePayload {\n    path: string\n    name: string\n}\n\nexport\nfunction create\n( payload: IFolderCreatePayload ): string | undefined\n{\n    return fsService.dir.create( payload.path, payload.name )\n}\n", "import type { IFileInfo } from '~/services/fs/types'\n\nimport { fsService } from '~/services/fs/service'\n\ninterface IFoldersGetFilesPayload {\n    path: string\n}\n\nexport\nfunction files\n( payload: IFoldersGetFilesPayload ): IFileInfo[]\n{\n    const info = fsService.dir.content( payload.path )\n    return info.files\n}\n", "import type { IDirInfo } from '~/services/fs/types'\n\nimport { fsService } from '~/services/fs/service'\n\ninterface IFoldersGetPayload {\n    path: string\n    top: string\n}\n\nexport\nfunction get\n( payload: IFoldersGetPayload ): IDirInfo[]\n{\n    const info = fsService.dir.content( payload.path )\n    return info.folders.map( dir => fsService.dir.extend( payload.top, dir ))\n}\n", "import { fsService } from '~/services/fs/service'\n\ninterface IFolderMovePayload {\n    files: string[]\n    target: string\n    top: string\n}\n\nexport\nfunction move\n( payload: IFolderMovePayload ): null\n{\n    void fsService.file.move( payload.files, payload.target )\n\n    return null\n}\n", "import { fsService } from '~/services/fs/service'\n\ninterface IFolderRemovePayload {\n    list: string[]\n}\n\nexport\nfunction remove\n( payload: IFolderRemovePayload ): null\n{\n    void fsService.file.remove( payload.list )\n\n    return null\n}\n", "import { fsService } from '~/services/fs/service'\n\ninterface IFolderRenamePayload {\n    path: string\n    original: string\n    update: string\n}\n\nexport\nfunction rename\n( payload: IFolderRenamePayload ): null\n{\n    void fsService.file.rename( payload.path, payload.original, payload.update )\n\n    return null\n}\n", "import { unstable_composeUploadHandlers, unstable_createFileUploadHandler, unstable_createMemoryUploadHandler, unstable_parseMultipartFormData } from '@remix-run/node'\n\nimport { configService, DEFAULT_MAX_SIZE } from '~/services/config'\n\nexport\nasync function upload\n( request: Request, query: URLSearchParams ): Promise<null>\n{\n    const target      = query.get( 'target' ) ?? undefined\n    const { maxsize } = configService.get() ?? DEFAULT_MAX_SIZE\n\n    const uploadHandler = unstable_composeUploadHandlers(\n\n        async ({ name, contentType, data, filename }): Promise<undefined> => {\n            if ( name === 'file' ) {\n                if ( !configService.allow( contentType )) {\n                    return\n                }\n\n                await unstable_createFileUploadHandler({\n                    directory:          target,\n                    avoidFileConflicts: false,\n                    maxPartSize:        maxsize,\n                    file:               ({ filename }) => filename\n                })({\n                    name,\n                    contentType,\n                    data,\n                    filename\n                })\n            }\n        },\n        // fallback to memory for everything else\n        unstable_createMemoryUploadHandler()\n    )\n\n    await unstable_parseMultipartFormData(\n        request,\n        uploadHandler\n    )\n\n    return null\n}\n", "import { generateServerApi } from '../generator'\n\nimport { create } from './handlers/create'\nimport { files }  from './handlers/files'\nimport { get  }   from './handlers/get'\nimport { move }   from './handlers/move'\nimport { remove } from './handlers/remove'\nimport { rename } from './handlers/rename'\nimport { upload } from './handlers/upload'\n\nexport\nconst folderApi = generateServerApi(\n    {\n        create,\n        move,\n        files,\n        upload,\n        remove,\n        rename\n    },\n    get\n)\n", "import type { ActionFunctionArgs } from '@remix-run/node'\n\nexport\nfunction getApiPath\n( request: ActionFunctionArgs['request']): string | undefined\n{\n    return request.url.split( '/api/' ).pop()\n}\n\nexport\nfunction getPathWithoutTopLevel\n( path: string ): string\n{\n    return path.split( '/' ).slice( 1 ).join( '/' )\n}\n\nexport\nfunction getTopLevel\n( path: string ): string | undefined\n{\n    return path.split( '/' ).shift()\n}\n", "import type { ActionFunctionArgs } from '@remix-run/node'\n\nimport { generateErrorProps }                              from '~/services/error'\nimport { folderApi }                                       from '~/services/server/folder'\nimport { getApiPath, getTopLevel, getPathWithoutTopLevel } from '~/services/url'\n\nexport\nasync function action\n({ request }: ActionFunctionArgs ): Promise<unknown>\n{\n    const path = getApiPath( request )\n\n    if ( !path ) {\n        return generateErrorProps( 'No path' )\n    }\n\n    const topLevel = getTopLevel( path )\n    const all      = getPathWithoutTopLevel( path )\n    const split    = all.split( '?' )\n    const action   = split[ 0 ]\n    const query    = new URLSearchParams( split[ 1 ])\n\n    switch ( topLevel?.toLocaleLowerCase()) {\n        case 'folders':\n            return await folderApi({\n                action,\n                request,\n                query\n            })\n\n        default:\n            return generateErrorProps( `No handler for \"${topLevel}\", fullpath: ${path}` )\n    }\n}\n", "export default {'entry':{'module':'/build/entry.client-4XBT6DUI.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-DU2GJHWZ.js','/build/_shared/chunk-ATT63OJJ.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-UWXTFGDU.js','imports':['/build/_shared/chunk-CEPTUODU.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-I7FYV7EJ.js','imports':['/build/_shared/chunk-CQBWXQXC.js','/build/_shared/chunk-B43JI2TA.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.$':{'id':'routes/api.$','parentId':'root','path':'api/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.$-6X5BJ6Z2.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.download':{'id':'routes/api.download','parentId':'root','path':'api/download','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.download-MIVWMAFP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/view.$path.$':{'id':'routes/view.$path.$','parentId':'root','path':'view/:path/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/view.$path.$-Q43CKUB5.js','imports':['/build/_shared/chunk-CQBWXQXC.js','/build/_shared/chunk-B43JI2TA.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'3c0b0bd5','hmr':{'runtime':'/build/_shared\\\\chunk-ATT63OJJ.js','timestamp':1718019676824},'url':'/build/manifest-3C0B0BD5.js'};", "\nimport * as entryServer from \"D:\\\\projects\\\\coding\\\\web\\\\apps\\\\nanomoln\\\\node_modules\\\\@remix-run\\\\dev\\\\dist\\\\config\\\\defaults\\\\entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/api.download/route.ts\";\nimport * as route2 from \"./routes/view.$path.$/route.ts\";\nimport * as route3 from \"./routes/_index/route.ts\";\nimport * as route4 from \"./routes/api.$/route.ts\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api.download\": {\n      id: \"routes/api.download\",\n      parentId: \"root\",\n      path: \"api/download\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/view.$path.$\": {\n      id: \"routes/view.$path.$\",\n      parentId: \"root\",\n      path: \"view/:path/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api.$\": {\n      id: \"routes/api.$\",\n      parentId: \"root\",\n      path: \"api/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": ["resolve", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "fs", "createReadableStreamFromReadable", "create", "fs", "stats", "files", "fs", "create", "files", "info", "read", "fs", "read", "fs", "resolve", "files", "top", "fs", "content", "createReadableStreamFromReadable", "route_exports", "loader", "useCallback", "useMemo", "useCallback", "useMemo", "files", "create", "create", "useMemo", "useCallback", "files", "draft", "useCallback", "useCallback", "useCallback", "useCallback", "useCallback", "create", "content", "useMemo", "rename", "useCallback", "move", "upload", "files", "remove", "useMemo", "Fragment", "jsxDEV", "useCallback", "files", "remove", "useMemo", "Fragment", "jsxDEV", "files", "Fragment", "jsxDEV", "jsxDEV", "Table", "cn", "jsxDEV", "cn", "useCallback", "useState", "jsxDEV", "jsxDEV", "draft", "Table", "Table", "cn", "jsxDEV", "Table", "cn", "Table", "cn", "jsxDEV", "info", "Table", "cn", "Table", "Checkbox", "useCallback", "jsxDEV", "useCallback", "Table", "Checkbox", "Fragment", "jsxDEV", "useCallback", "Table", "Table", "cn", "jsxDEV", "Table", "cn", "Table", "cn", "jsxDEV", "Table", "cn", "jsxDEV", "jsxDEV", "Table", "Table", "Checkbox", "cn", "Fragment", "jsxDEV", "Table", "Checkbox", "cn", "jsxDEV", "content", "useState", "useEffect", "useMemo", "useCallback", "useMemo", "useState", "useState", "useMemo", "useCallback", "exclude", "IconFolderFilled", "ActionIcon", "useCallback", "Fragment", "jsxDEV", "rename", "useCallback", "ActionIcon", "Fragment", "jsxDEV", "ActionIcon", "Fragment", "jsxDEV", "ActionIcon", "Fragment", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "formatItems", "jsxDEV", "formatItems", "jsxDEV", "files", "IconFolderFilled", "useState", "useEffect", "useMemo", "jsxDEV", "jsxDEV", "jsxDEV", "useState", "useEffect", "useMemo", "jsxDEV", "useState", "useEffect", "useMemo", "jsxDEV", "jsxDEV", "AppShell", "Anchor", "Link", "useState", "useEffect", "useMemo", "useState", "useMemo", "useEffect", "jsxDEV", "Anchor", "Link", "Group", "jsxDEV", "Group", "Anchor", "Link", "jsxDEV", "jsxDEV", "Anchor", "Link", "jsxDEV", "jsxDEV", "AppShell", "ActionIcon", "IconFolderFilled", "useEffect", "useState", "useContext", "useRef", "jsxDEV", "Group", "rem", "jsxDEV", "ActionIcon", "IconUpload", "jsxDEV", "useCallback", "useMemo", "upload", "Button", "filesize", "useCallback", "useMemo", "Fragment", "jsxDEV", "filesize", "Button", "useCallback", "useMemo", "Button", "useCallback", "useMemo", "Fragment", "jsxDEV", "Button", "useCallback", "useMemo", "upload", "useCallback", "files", "useMemo", "Fragment", "jsxDEV", "useRef", "useContext", "upload", "Fragment", "jsxDEV", "create", "useState", "useEffect", "ActionIcon", "IconFolderFilled", "jsxDEV", "useEffect", "useMemo", "useEffect", "useMemo", "info", "loader", "jsxDEV", "jsxDEV", "route_exports", "route_default", "loader", "useLoaderData", "useEffect", "useMemo", "useLoaderData", "useEffect", "useMemo", "loader", "jsxDEV", "jsxDEV", "route_default", "route_exports", "action", "create", "move", "remove", "rename", "filename", "create", "move", "remove", "rename", "action", "route_exports"]
}
